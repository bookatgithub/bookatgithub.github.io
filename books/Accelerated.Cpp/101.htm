<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Language details</title>
<link rel="stylesheet" type="text/css" href="./acc.css" />
</head>

<body>
<div class="prevnext">
<a href="100.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="102.htm"><img src="images/Next1.gif" /></a>
</div>
<div class="chapname">
<h1>Appendix A</h1>
</div>
<div id="chapter">
<h2>Language details</h2>
</div>
<p>This appendix serves two purposes: It includes some additional low-level details, and it 
summarizes in one place the expressions and statements of the language, including some 
that we have not used elsewhere in this book. The low-level material relates primarily to 
the complexities of C++'s declarator syntax, and the details of the built-in arithmetic types, 
both of which the language inherits from the C programming language. These details are 
not necessary for understanding the programs in this book, and indeed are not necessary 
to writing good C++ programs. However, there are many programs that do require 
knowledge of these details, so it may be useful to review them.</p>
<p>In this appendix we describe syntax as follows: <code>constant-width</code> symbols stand for 
themselves, <i>italic </i>words stand for syntactic categories,... means zero or more repetitions 
of the item that immediately precedes it, and phrases enclosed in italic brackets <i><code>[ ]</code> </i>are 
optional. Moreover, we use italic curly braces <i><code>{ } </code></i>for grouping, and <code>|</code> to show alternatives. 
For example,</p>
<div class="prebox"><pre>
<i>declaration-stmt: decl-specifiers [ declarator [ initializer ]] [, declarator [ initializer ]]... ;</i>
</pre></div>
<p>means that a <i><code>declaration-stmt</code> </i>consists of <i><code>decl-specifiers</code>, </i>followed by zero or more 
<i><code>declarators</code>, </i>each optionally followed by an <i><code>initializer</code>, </i>followed by a semicolon.</p>
<div class="prevnext">
<a href="100.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="102.htm"><img src="images/Next1.gif" /></a>
</div>
</body>
</html>