<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Library summary</title>
<link rel="stylesheet" type="text/css" href="./acc.css" />
</head>

<body>
<div class="prevnext">
<a href="105.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="107.htm"><img src="images/Next1.gif" /></a>
</div>
<div class="chapname">
<h1>Appendix B</h1>
</div>
<div id="chapter">
<h2>Library summary</h2>
</div>
<p>The standard library is a major contribution to the standardization of C++. Throughout 
this book, we have relied on the library to write succinct, idiomatic C++ programs. This 
chapter reviews the library facilities that we used, and describes some generally useful 
facilities that we did not have occasion to use. Each section presents a library class or family 
of related classes by showing and explaining how to use the relevant facilities.</p>
<p>In general, the standard library introduces names into namespace <code>std</code>. Programs that 
use standard-library facilities must therefore either prefix such names by <code>std::</code> or make 
them generally available with <code>using</code>-declarations. In this appendix, we will not explicitly 
mention the need to do so. Accordingly, for example, we shall refer to <code>cout</code> rather 
than to <code>std::cout</code>.</p>
<p>Our examples generally assume the following meanings for the names shown:</p>
<p><code>n</code></p>
<div class="details">
A variable or expression that yields a value of any of the integral types
</div>
<p><code>t</code></p>
<div class="details">
A value of type <code>T</code>
</div>
<p><code>s</code></p>
<div class="details">
A <code>string</code> value
</div>
<p><code>cp</code></p>
<div class="details">
A pointer to the initial element of a null-terminated character array
</div>
<p><code>c</code></p>
<div class="details">
A <code>char</code> value
</div>
<p><code>p</code></p>
<div class="details">
A predicate, which is a function that returns <code>bool</code> or a value convertible to <code>bool</code>
</div>
<p><code>os</code></p>
<div class="details">
An output stream
</div>
<p><code>is</code></p>
<div class="details">
An input stream
</div>
<p><code>strm</code></p>
<div class="details">
An input or output stream
</div>
<p><code>b</code></p>
<div class="details">
An iterator that denotes the beginning of a sequence
</div>
<p><code>e</code></p>
<div class="details">
An iterator that denotes (one past) the end of a sequence
</div>
<p><code>d</code></p>
<div class="details">
An iterator that denotes a destination
</div>
<p><code>it</code></p>
<div class="details">
An iterator that denotes an element
</div>
<div class="prevnext">
<a href="105.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="107.htm"><img src="images/Next1.gif" /></a>
</div>
</body>
</html>