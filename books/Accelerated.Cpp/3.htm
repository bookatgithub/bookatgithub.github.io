<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>0.5 Using the standard library for output</title>
<link rel="stylesheet" type="text/css" href="./acc.css" />
</head>

<body>
<div class="prevnext">
<a href="2.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="4.htm"><img src="images/Next1.gif" /></a>
</div>
<h3>0.5 Using the standard library for output</h3>
<p>The first statement inside the braces does our program's real work:</p>
<div class="prebox">
<pre>std::cout &lt;&lt; &quot;Hello, world!&quot; &lt;&lt; std::endl;
</pre></div>
<p>This statement uses the standard library's <i><b>output operator</b></i>, <code>&lt;&lt;</code>, to write <code>Hello, world!</code> 
on the standard output, and then to write the value of <code>std::endl</code>.</p>
<p>Preceding a name by <code>std::</code> indicates that the name is part of a <i><b>namespace</b></i> named <code>std</code>. 
A namespace is a collection of related names; the standard library uses <code>std</code> to contain all 
the names that it defines. So, for example, the <code>iostream</code> standard header defines the 
names <code>cout</code> and <code>endl</code>, and we refer to these names as <code>std::cout</code> and <code>std::endl</code>.</p>
<p>The name <code>std::cout</code> refers to the <i><b>standard output stream</b></i>, which is whatever facility 
the C++ implementation uses for ordinary output from programs. In a typical C++ implementation 
under a windowing operating system, <code>std::cout</code> will denote the window 
that the implementation associates with the program while it is running. Under such a 
system, the output written to <code>std::cout</code> will appear in the associated window.</p>
<p>Writing the value of <code>std::endl</code> ends the current line of output, so that if this program 
were to produce any more output, that output would appear on a new line.</p>
<a name="return">
<h3>0.6 The return statement</h3></a>
<p>A return statement, such as</p>
<div class="prebox">
<pre>return 0;</pre>
</div>
<p>ends execution of the function in which it appears, and passes the value that appears 
between the <code>return</code> and the semicolon (<code>0</code> in this example) back to the program that 
called the function that is returning. The value that is returned must have a type that is 
appropriate for the type that the function says it will return. In the case of <code>main</code>, the 
return type is <code>int</code> and the program to which <code>main</code> returns is the C++ implementation 
itself. Therefore, a <code>return</code> from <code>main</code> must include an integer-valued expression, which is passed back to the implementation.</p>
<p>Of course, there may be more than one point at which it might make sense to terminate 
a program; such a program may have more than one <code>return</code> statement. If the definition 
of a function promises that the function returns a value of a particular type, then every 
<code>return</code> statement in the function must return a value of an appropriate type.</p>
<div class="prevnext">
<a href="2.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="4.htm"><img src="images/Next1.gif" /></a>
</div>
</body>
</html>