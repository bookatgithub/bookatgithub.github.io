<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>9.1 Student_info revisited</title>
<link rel="stylesheet" type="text/css" href="./acc.css" />
</head>

<body>
<div class="prevnext">
<a href="49.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="51.htm"><img src="images/Next1.gif" /></a>
</div>
<h3>9.1 Student_info revisited</h3>
<p>In &sect;4.2.1/61, we wrote a simple data structure called <code>Student_info</code> and a handful of 
functions, which made it easy to write programs to deal with students' course grades. 
However, the data structure and functions that we wrote were not well suited for other 
programmers to use.</p>
<p>Whether we were aware of it or not, programmers who wanted to use our functions 
had to follow certain conventions. For example, we assumed that anyone who used a 
newly created <code>Student_info</code> object would first read data into it. Failure to do so would 
result in an object that had an empty <code>homework</code> vector and undefined values (&sect;3.1/38) for 
<code>midterm</code> and <code>final</code>. Any use of these values would yield unpredictable behavior— 
either incorrect results or an outright crash. Moreover, if a user wanted to check whether 
a <code>Student_info</code> contained valid data, the only way to do so would be to look at the 
actual data members, which would require detailed knowledge of how we had implemented 
the <code>Student_info</code> class.</p>
<p>A related problem is that someone who used our programs would probably assume 
that once a record for a student has been read from a file, that student's data will not 
change in the future. Unfortunately, our code offers no basis for that assumption.</p>
<p>A third problem is that the &quot;interface&quot; to our original <code>Student_info</code> structure is 
scattered. By convention, we might put the functions, such as <code>read</code>, that change the state 
of a <code>Student_info</code> object into a single header file. Doing so would help subsequent 
users of our code—if we decide to do so—but there is no requirement for such grouping.</p>
<p>As we'll see in this chapter, we can extend the <code>Student_info</code> structure to solve each 
of these problems.</p>
<div class="prevnext">
<a href="49.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="51.htm"><img src="images/Next1.gif" /></a>
</div>
</body>
</html>