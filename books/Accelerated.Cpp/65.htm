<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Defining abstract data types</title>
<link rel="stylesheet" type="text/css" href="./acc.css" />
</head>

<body>
<div class="prevnext">
<a href="64.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="66.htm"><img src="images/Next1.gif" /></a>
</div>
<div class="chapname">
<h1>11</h1>
</div>
<div id="chapter">
<h2>Defining abstract data types</h2>
</div>
<p>In Chapter 9, we learned something about the basic language features required to define 
new types. However, the <code>Student_info</code> type that we defined in that chapter did not 
specify what should happen when objects of type <code>Student_info</code> are copied, assigned, or 
destroyed. As we'll see in this chapter, the class author also controls all these aspects of 
an object's behavior. What may be surprising is how essential the correct definition of 
these operations is for creating a type that is intuitive and easy to use.</p>
<p>Because we've used <code>vector</code>s extensively, we'll build a similar class to further our 
understanding of how to design and implement classes. The implementation that we present 
will be greatly simplified in terms of which operations we provide and our attention 
to efficiency. Because it is a stripped-down version of the standard-library <code>vector</code> class, 
we'll call our class <code>Vec</code> to avoid confusing it with the library class. Although we are 
largely concerned with how to copy, assign, and destroy objects of class <code>Vec</code>, we will find 
it useful to start by implementing some simpler member functions. Once we have completed 
these other functions, we will come back and look at how we can control copying, 
assigning, and destroying class objects.</p>
<div class="prevnext">
<a href="64.htm"><img src="images/Prev1.gif" /></a>&nbsp;&nbsp;<a href="66.htm"><img src="images/Next1.gif" /></a>
</div>
</body>
</html>