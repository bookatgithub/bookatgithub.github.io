<html>
<head>
<meta name="generator" content="CHM Decoder by GridinSoft LLC   www.gridinsoft.com"><link rel="StyleSheet" href="dtree.css" type="text/css" />
<script type="text/javascript" src="dtree.js"></script>
</head>
<body>
<!-- Generated by CHM Decoder (http://www.gridinsoft.com) -->
<div class="dtree">
<p><a href="javascript: d.openAll();">open all</a> | <a href="javascript: d.closeAll();">close all</a></p>
<script type="text/javascript"><!--
d = new dTree("d");
d.add(0,-1,"Addison Wesley Accelerated C++","");
d.add(1,0,"Cover","cover.htm");
d.add(2,0,"Table of Contents","toc.htm");
d.add(3,0,"Copyright","Copyright.htm");
d.add(4,0,"The C++ In-Depth Series","series.htm");
d.add(5,0,"Preface","preface.htm");
d.add(6,0,"Dedication","Dedication.htm");
d.add(7,0,"Chapter 0 Getting Started","1.htm");
d.add(8,7,"0.1 Comments","1.htm#comments");
d.add(9,7,"0.2 #include","2.htm");
d.add(10,7,"0.3 The main function","2.htm#main");
d.add(11,7,"0.4 Curly braces","2.htm#curly");
d.add(12,7,"0.5 Using the standard library for output","3.htm");
d.add(13,7,"0.6 The return statement","3.htm#return");
d.add(14,7,"0.7 A slightly deeper look","4.htm");
d.add(15,7,"0.8 Details","5.htm");
d.add(16,0,"Chapter 1 Working with strings","6.htm");
d.add(17,16,"1.1 Input","6.htm#input");
d.add(18,16,"1.2 Framing a name","7.htm");
d.add(19,16,"1.3 Details","8.htm");
d.add(20,0,"Chapter 2 Looping and counting","9.htm");
d.add(21,20,"2.1 The problem","9.htm#problem");
d.add(22,20,"2.2 Overall structure","9.htm#overall");
d.add(23,20,"2.3 Writing an unknown number of rows","10.htm");
d.add(24,20,"2.4 Writing a row","11.htm");
d.add(25,20,"2.5 The complete framing program","12.htm");
d.add(26,20,"2.6 Counting","13.htm");
d.add(27,20,"2.7 Details","14.htm");
d.add(28,0,"Chapter 3 Working with batches of data","15.htm");
d.add(29,28,"3.1 Computing student grades","15.htm#grades");
d.add(30,28,"3.2 Using medians instead of averages","16.htm");
d.add(31,28,"3.3 Details","17.htm");
d.add(32,0,"Chapter 4 Organizing programs and data","18.htm");
d.add(33,32,"4.1 Organizing computations","18.htm#comp");
d.add(34,32,"4.2 Organizing data","19.htm");
d.add(35,32,"4.3 Putting it all together","20.htm");
d.add(36,32,"4.4 Partitioning the grading program","21.htm");
d.add(37,32,"4.5 The revised grading program","22.htm");
d.add(38,32,"4.6 Details","23.htm");
d.add(39,0,"Chapter 5 Using sequential containers and analyzing strings","24.htm");
d.add(40,39,"5.1 Separating students into categories","24.htm#separating");
d.add(41,39,"5.2 Iterators","25.htm");
d.add(42,39,"5.3 Using iterators instead of indices","26.htm");
d.add(43,39,"5.4 Rethinking our data structure for better performance","27.htm");
d.add(44,39,"5.5 The list type","28.htm");
d.add(45,39,"5.6 Taking strings apart","29.htm");
d.add(46,39,"5.7 Testing our split function","30.htm");
d.add(47,39,"5.8 Putting strings together","31.htm");
d.add(48,39,"5.9 Details","32.htm");
d.add(49,0,"Chapter 6 Using library algorithms","33.htm");
d.add(50,49,"6.1 Analyzing strings","33.htm#analyzing");
d.add(51,49,"6.2 Comparing grading schemes","34.htm");
d.add(52,49,"6.3 Classifying students, revisited","35.htm");
d.add(53,49,"6.4 Algorithms, containers, and iterators","36.htm");
d.add(54,49,"6.5 Details","37.htm");
d.add(55,0,"Chapter 7 Using associative containers","38.htm");
d.add(56,55,"7.1 Containers that support efficient look-up","38.htm#container");
d.add(57,55,"7.2 Counting words","39.htm");
d.add(58,55,"7.3 Generating a cross-reference table","40.htm");
d.add(59,55,"7.4 Generating sentences","41.htm");
d.add(60,55,"7.5 A note on performance","42.htm");
d.add(61,55,"7.6 Details","43.htm");
d.add(62,0,"Chapter 8 Writing generic functions","44.htm");
d.add(63,62,"8.1 What is a generic function?","44.htm#generic");
d.add(64,62,"8.2 Data-structure independence","45.htm");
d.add(65,62,"8.3 Input and output iterators","46.htm");
d.add(66,62,"8.4 Using iterators for flexibility","47.htm");
d.add(67,62,"8.5 Details","48.htm");
d.add(68,0,"Chapter 9 Defining new types","49.htm");
d.add(69,68,"9.1 Student_info revisited","50.htm");
d.add(70,68,"9.2 Class types","51.htm");
d.add(71,68,"9.3 Protection","52.htm");
d.add(72,68,"9.4 The Student_info class","53.htm");
d.add(73,68,"9.5 Constructors","54.htm");
d.add(74,68,"9.6 Using the Student_info class","55.htm");
d.add(75,68,"9.7 Details","56.htm");
d.add(76,0,"Chapter 10 Managing memory and low-level data structures","57.htm");
d.add(77,76,"10.1 Pointers and arrays","58.htm");
d.add(78,76,"10.2 String literals revisited","59.htm");
d.add(79,76,"10.3 Initializing arrays of character pointers","60.htm");
d.add(80,76,"10.4 Arguments to main","61.htm");
d.add(81,76,"10.5 Reading and writing files","62.htm");
d.add(82,76,"10.6 Three kinds of memory management","63.htm");
d.add(83,76,"10.7 Details","64.htm");
d.add(84,0,"Chapter 11 Defining abstract data types","65.htm");
d.add(85,84,"11.1 The Vec class","66.htm");
d.add(86,84,"11.2 Implementing the Vec class","67.htm");
d.add(87,84,"11.3 Copy control","68.htm");
d.add(88,84,"11.4 Dynamic Vecs","69.htm");
d.add(89,84,"11.5 Flexible memory management","70.htm");
d.add(90,84,"11.6 Details","71.htm");
d.add(91,0,"Chapter 12 Making class objects act like values","72.htm");
d.add(92,91,"12.1 A simple string class","73.htm");
d.add(93,91,"12.2 Automatic conversions","74.htm");
d.add(94,91,"12.3 Str operations","75.htm");
d.add(95,91,"12.4 Some conversions are hazardous","76.htm");
d.add(96,91,"12.5 Conversion operators","77.htm");
d.add(97,91,"12.6 Conversions and memory management","78.htm");
d.add(98,91,"12.7 Details","79.htm");
d.add(99,0,"Chapter 13 Using inheritance and dynamic binding","80.htm");
d.add(100,99,"13.1 Inheritance","81.htm");
d.add(101,99,"13.2 Polymorphism and virtual functions","82.htm");
d.add(102,99,"13.3 Using inheritance to solve our problem","83.htm");
d.add(103,99,"13.4 A simple handle class","84.htm");
d.add(104,99,"13.5 Using the handle class","85.htm");
d.add(105,99,"13.6 Subtleties","86.htm");
d.add(106,99,"13.7 Details","87.htm");
d.add(107,0,"Chapter 14 Managing memory (almost) automatically","88.htm");
d.add(108,107,"14.1 Handles that copy their objects","89.htm");
d.add(109,107,"14.2 Reference-counted handles","90.htm");
d.add(110,107,"14.3 Handles that let you decide when to share data","91.htm");
d.add(111,107,"14.4 An improvement on controllable handles","92.htm");
d.add(112,107,"14.5 Details","93.htm");
d.add(113,0,"Chapter 15 Revisiting character pictures","94.htm");
d.add(114,113,"15.1 Design","95.htm");
d.add(115,113,"15.2 Implementation","96.htm");
d.add(116,113,"15.3 Details","97.htm");
d.add(117,0,"Chapter 16 Where do we go from here?","98.htm");
d.add(118,117,"16.1 Use the abstractions you have","99.htm");
d.add(119,117,"16.2 Learn more","100.htm");
d.add(120,0,"Appendix A Language details","101.htm");
d.add(121,120,"A.1 Declarations","102.htm");
d.add(122,120,"A.2 Types","103.htm");
d.add(123,120,"A.3 Expressions","104.htm");
d.add(124,120,"A.4 Statements","105.htm");
d.add(125,0,"Appendix B Library summary","106.htm");
d.add(126,125,"B.1 Input-output","107.htm");
d.add(127,125,"B.2 Containers and iterators","108.htm");
d.add(128,125,"B.3 Algorithms","109.htm");

document.write(d);
//-->
</script>
</div>
<p \><hr size="1" \>
<font class="dtree">Generated by <a target="_blank" href="http://www.gridinsoft.com">CHM Decoder</a></font><br><br>
<font class="dtree">Need you translate this to other language?<br>Get <a target="_blank" href="http://www.chmeditor.com">CHM Editor</a> Now!</font>
</body>
</html>
