<HTML
><HEAD
>
<TITLE>[Chapter 13] 13.7 gent&nbsp;- Get a termcap Entry</TITLE>
<META
NAME="DC.title"
CONTENT="sed &amp; awk"><META
NAME="DC.creator"
CONTENT="Dale Dougherty &amp; Arnold Robbins"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1998-08-03T21:05:43Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-225-5"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch13_01.htm"
TITLE="13. A Miscellany of Scripts"><LINK
REL="prev"
HREF="ch13_06.htm"
TITLE="13.6 readsource&nbsp;- Format Program Source Files for troff"><LINK
REL="next"
HREF="ch13_08.htm"
TITLE="13.8 plpr&nbsp;- lpr Preprocessor"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="sed &amp; awk"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="sed &amp; awk"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/ssrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_06.htm"
TITLE="13.6 readsource&nbsp;- Format Program Source Files for troff"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6 readsource&nbsp;- Format Program Source Files for troff"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 13<BR>A Miscellany of Scripts</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_08.htm"
TITLE="13.8 plpr&nbsp;- lpr Preprocessor"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8 plpr&nbsp;- lpr Preprocessor"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="AUTOID-11495"
>13.7 gent&nbsp;- Get a termcap Entry</A
></H2
><P
CLASS="para"
><EM
CLASS="emphasis"
>Contributed by Tom Christiansen</EM
></P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="CH13.D"
></A
>Here's a sed script I use to extract a <B
CLASS="emphasis.bold"
>termcap</B
> entry.  It works 
for any <B
CLASS="emphasis.bold"
>termcap</B
>-like file, such as disktab.  For example: </P
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$ <CODE
CLASS="userinput"
><B
>gent vt100</B
></CODE
></PRE
></BLOCKQUOTE
><P
CLASS="para"
>extracts the vt100 entry from termcap, while:</P
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$ <CODE
CLASS="userinput"
><B
>gent eagle /etc/disktab</B
></CODE
></PRE
></BLOCKQUOTE
><P
CLASS="para"
>gets the eagle entry from disktab.  Now I know it could have
been done in C or Perl, but I did it a long time ago.  It's also
interesting because of the way it passes options into the sed
script.  I know, I know:  it should have been written in <EM
CLASS="emphasis"
>sh</EM
> not <EM
CLASS="emphasis"
>csh</EM
>, too.</P
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>#!/bin/csh -f

set argc = $#argv

set noglob
set dollar = '$'
set squeeze = 0
set noback=&quot;&quot; nospace=&quot;&quot;

rescan:
    if ( $argc &gt; 0 &amp;&amp; $argc &lt; 3 ) then
        if ( &quot;$1&quot; =~ -* ) then
            if ( &quot;-squeeze&quot; =~ $1* ) then
                set noback='s/\\//g' nospace='s/^[  ]*//'
                set squeeze = 1
                shift
                @ argc --
                goto rescan 
            else 
                echo &quot;Bad switch: $1&quot;
                goto usage
            endif
        endif

        set entry = &quot;$1&quot;
        if ( $argc == 1 ) then
            set file = /etc/termcap
        else
            set file = &quot;$2&quot;
        endif
    else
        usage:
            echo &quot;usage: `basename $0` [-squeeze] entry [termcapfile]&quot;
            exit 1
    endif


sed -n -e \
&quot;/^${entry}[|:]/ {\
    :x\
    /\\${dollar}/ {\
    ${noback}\
    ${nospace}\
    p\
    n\
    bx\
    }\
    ${nospace}\
    p\
    n\
    /^  / {\
        bx\
    }\
    }\
/^[^    ]*|${entry}[|:]/ {\
    :y\
    /\\${dollar}/ {\
    ${noback}\
    ${nospace}\
    p\
    n\
    by\
    }\
    ${nospace}\
    p\
    n\
    /^  / {\
        by\
    }\
    }&quot; &lt; $file</PRE
></BLOCKQUOTE
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SEDAWK-CH-13-SECT-0.0.0.7"
>13.7.1 Program Notes for gent</A
></H3
><P
CLASS="para"
>Once you get used to reading awk scripts, they seem so much easier
to understand than all but the simplest sed script.  It can
be a painstaking task to figure out what a small sed script
like the one shown here is doing.</P
><P
CLASS="para"
>This script does show how to pass shell variables into a sed
script.  Variables are used to pass optional sed commands into
the script, such as the substitution commands that replace
backslashes and spaces.</P
><P
CLASS="para"
>This script could be simplified in several ways.
First of all, the two regular expressions don't seem
necessary to match the entry.  The first matches the
name of the entry at the beginning of a line; the second
matches it elsewhere on the line.  
The loops labeled <B
CLASS="emphasis.bold"
>x</B
> and <B
CLASS="emphasis.bold"
>y</B
>
are identical and even if the two regular expressions were
necessary, we could have them branch to the same loop. </P
></DIV
><A
CLASS="indexterm"
NAME="AUTOID-11520"
></A
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_06.htm"
TITLE="13.6 readsource&nbsp;- Format Program Source Files for troff"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6 readsource&nbsp;- Format Program Source Files for troff"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="sed &amp; awk"
><IMG
SRC="../gifs/txthome.gif"
ALT="sed &amp; awk"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_08.htm"
TITLE="13.8 plpr&nbsp;- lpr Preprocessor"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8 plpr&nbsp;- lpr Preprocessor"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.6 readsource&nbsp;- Format Program Source Files for troff</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.8 plpr&nbsp;- lpr Preprocessor</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The UNIX CD Bookshelf Navigation"><MAP
NAME="map"
><AREA
SHAPE="RECT"
COORDS="0,0,73,21"
HREF="../index.htm"
ALT="The UNIX CD Bookshelf"><AREA
SHAPE="RECT"
COORDS="74,0,163,21"
HREF="../upt/index.htm"
ALT="UNIX Power Tools"><AREA
SHAPE="RECT"
COORDS="164,0,257,21"
HREF="../unixnut/index.htm"
ALT="UNIX in a Nutshell"><AREA
SHAPE="RECT"
COORDS="258,0,321,21"
HREF="../vi/index.htm"
ALT="Learning the vi Editor"><AREA
SHAPE="RECT"
COORDS="322,0,378,21"
HREF="index.htm"
ALT="sed &amp; awk"><AREA
SHAPE="RECT"
COORDS="379,0,438,21"
HREF="../ksh/index.htm"
ALT="Learning the Korn Shell"><AREA
SHAPE="RECT"
COORDS="439,0,514,21"
HREF="../lrnunix/index.htm"
ALT="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
