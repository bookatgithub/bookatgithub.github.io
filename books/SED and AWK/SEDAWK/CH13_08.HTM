<HTML
><HEAD
>
<TITLE>[Chapter 13] 13.8 plpr&nbsp;- lpr Preprocessor</TITLE>
<META
NAME="DC.title"
CONTENT="sed &amp; awk"><META
NAME="DC.creator"
CONTENT="Dale Dougherty &amp; Arnold Robbins"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1998-08-03T21:05:45Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-225-5"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch13_01.htm"
TITLE="13. A Miscellany of Scripts"><LINK
REL="prev"
HREF="ch13_07.htm"
TITLE="13.7 gent&nbsp;- Get a termcap Entry"><LINK
REL="next"
HREF="ch13_09.htm"
TITLE="13.9 transpose&nbsp;- Perform a Matrix Transposition"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="sed &amp; awk"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="sed &amp; awk"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="../search/ssrch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_07.htm"
TITLE="13.7 gent&nbsp;- Get a termcap Entry"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.7 gent&nbsp;- Get a termcap Entry"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 13<BR>A Miscellany of Scripts</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_09.htm"
TITLE="13.9 transpose&nbsp;- Perform a Matrix Transposition"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.9 transpose&nbsp;- Perform a Matrix Transposition"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="AUTOID-11521"
>13.8 plpr&nbsp;- lpr Preprocessor</A
></H2
><P
CLASS="para"
><EM
CLASS="emphasis"
>Contributed by Tom Van Raalte</EM
></P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="CH13.E"
></A
>I thought you might want to use the following script around the
office.  It is a preprocessor for <KBD
CLASS="command"
>lpr</KBD
> that sends output to the &quot;best&quot;
printer.  [This shell script is written for a BSD or Linux system 
and you would use this command in place of <KBD
CLASS="command"
>lpr</KBD
>.  
It reads the output of the <KBD
CLASS="command"
>lpq</KBD
> command to determine if a
specific printer is available.  If not, it tries a
list of printers to see which one is available or which is 
the least busy.  Then it invokes <KBD
CLASS="command"
>lpr</KBD
> to send the
job to that printer.]  </P
><BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>#!/bin/sh
#
#set up temp file
TMP=/tmp/printsum.$$
LASERWRITER=${LASERWRITER-ps6}
#Check to see if the default printer is free?
#
#
FREE=`lpq -P$LASERWRITER | awk '
{ if ($0 == &quot;no entries&quot;) 
  {
	val=1
	print val
	exit 0
  }
  else
  {
	val=0
	print val
	exit 0
  }
}'`
#echo Free is $FREE
#
#If the default is free then $FREE is set, and we print and exit.
#
if [ $FREE -eq 1 ] 
then
	SELECT=$LASERWRITER
#echo selected $SELECT
	lpr -P$SELECT $*
	exit 0
fi
#echo Past the exit
#
#Now we go on to see if any of the printers in bank are free.  
#
BANK=${BANK-$LASERWRITER}
#echo bank is $BANK
#
#If BANK is the same as LASERWRITER, then we have no choice.
#otherwise, we print on the one that is free, if any are free.
#
if [ &quot;$BANK&quot; =  &quot;$LASERWRITER&quot; ] 
then
	SELECT=$LASERWRITER
	lpr -P$SELECT $*
	exit 0
fi
#echo past the check bank=laserprinter
#
#Now we check for a free printer.
#Note that $LASERWRITER is checked again in case it becomes free
#during the check.
#
#echo now we check the other for a free one
for i in $BANK $LASERWRITER
do
FREE=`lpq -P$i | awk '
{ if ($0 == &quot;no entries&quot;) 
  {
	val=1
	print val
	exit 0
  }
  else
  {
	val=0
	print val
	exit 0
  }
}'`
if [ $FREE -eq 1 ]
then
#   echo in loop for $i
	SELECT=$i
#   echo select is $SELECT
#   if [ &quot;$FREE&quot; != &quot;$LASERWRITER&quot; ]
#   then
#          echo &quot;Output redirected to printer $i&quot;
#   fi
	lpr -P$SELECT $*
	exit 0
fi
done
#echo done checking for a free one
# 
#If we make it here then no printers are free.  So we 
#print on the printer with the least bytes queued.
#
#
for i in $BANK $LASERWRITER
do
val=`lpq -P$i | awk ' BEGIN {
	start=0;
}
/^Time/ {
	start=1; 
	next;
}
(start == 1){
	test=substr($0,62,20);
	print test;
} ' | awk '
BEGIN {
	summ=0;
}
{
	summ=summ+$1;
}
END {
	print summ;
}'`
echo &quot;$i $val&quot; &gt;&gt; $TMP
done

SELECT=`awk '(NR==1) {
	select=$1;
	best=$2
}
($2 &lt; best) {
	select=$1; 
	best=$2} 
END {
	print select
}
' $TMP `
#echo $SELECT
#
rm $TMP
#Now print on the selected printer
#if [ $SELECT != $LASERWRITER ]
#then
#   echo &quot;Output redirected to printer $i&quot;
#fi
lpr -P$SELECT $*
trap 'rm -f $TMP; exit 99' 2 3 15</PRE
></BLOCKQUOTE
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SEDAWK-CH-13-SECT-0.0.0.8"
>13.8.1 Program Notes for plpr</A
></H3
><P
CLASS="para"
>For the most part, we've avoided scripts like these in which
most of the logic is coded in the shell script.  However,
such a minimalist approach is representative of a 
wide variety of uses of awk.
Here, awk is called to do only those things that the shell
script can't do (or do as easily). 
Manipulating the output of a command and performing
numeric comparisons is an example of such a task. </P
><P
CLASS="para"
>As a side note, the <B
CLASS="emphasis.bold"
>trap</B
> statement
at the end should be at the top of the script, not at the bottom.</P
></DIV
><A
CLASS="indexterm"
NAME="AUTOID-11538"
></A
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_07.htm"
TITLE="13.7 gent&nbsp;- Get a termcap Entry"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.7 gent&nbsp;- Get a termcap Entry"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="sed &amp; awk"
><IMG
SRC="../gifs/txthome.gif"
ALT="sed &amp; awk"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch13_09.htm"
TITLE="13.9 transpose&nbsp;- Perform a Matrix Transposition"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.9 transpose&nbsp;- Perform a Matrix Transposition"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.7 gent&nbsp;- Get a termcap Entry</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.9 transpose&nbsp;- Perform a Matrix Transposition</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The UNIX CD Bookshelf Navigation"><MAP
NAME="map"
><AREA
SHAPE="RECT"
COORDS="0,0,73,21"
HREF="../index.htm"
ALT="The UNIX CD Bookshelf"><AREA
SHAPE="RECT"
COORDS="74,0,163,21"
HREF="../upt/index.htm"
ALT="UNIX Power Tools"><AREA
SHAPE="RECT"
COORDS="164,0,257,21"
HREF="../unixnut/index.htm"
ALT="UNIX in a Nutshell"><AREA
SHAPE="RECT"
COORDS="258,0,321,21"
HREF="../vi/index.htm"
ALT="Learning the vi Editor"><AREA
SHAPE="RECT"
COORDS="322,0,378,21"
HREF="index.htm"
ALT="sed &amp; awk"><AREA
SHAPE="RECT"
COORDS="379,0,438,21"
HREF="../ksh/index.htm"
ALT="Learning the Korn Shell"><AREA
SHAPE="RECT"
COORDS="439,0,514,21"
HREF="../lrnunix/index.htm"
ALT="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
