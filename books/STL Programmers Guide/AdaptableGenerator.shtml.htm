<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>Adaptable Generator</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>Adaptable Generator</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "functors.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "concept.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/concept.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: functors</TD>
<TD Align=right VAlign=top><b>Component type</b>: concept</TD>
</TR>
</Table>

<h3>Description</h3>
An Adaptable Generator is a <A href="Generator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Generator.shtml">Generator</A> with a nested
<tt>typedef</tt> that defines its result type.  <A href="#1">[1]</A> This nested <tt>typedef</tt> makes
it possible to use function object adaptors.
<h3>Refinement of</h3>
<A href="Generator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Generator.shtml">Generator</A>
<h3>Associated types</h3>
<Table border>
<TR>
<TD VAlign=top>
Result type
</TD>
<TD VAlign=top>
<tt>F::result_type</tt>
</TD>
<TD VAlign=top>
The type returned when the Generator is called
</TD>
</tr>
</table>
<h3>Notation</h3>
<Table>
<TR>
<TD VAlign=top>
<tt>F</tt>
</TD>
<TD VAlign=top>
A type that is a model of Adaptable Generator
</TD>
</tr>
</table>
<h3>Definitions</h3>
<h3>Valid expressions</h3>
None, except for those defined by <A href="Generator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Generator.shtml">Generator</A>
<h3>Expression semantics</h3>
<h3>Complexity guarantees</h3>
<h3>Invariants</h3>
<h3>Models</h3>
The STL does not include any types that are models of Adaptable
Generator.  An example of a user-defined Adaptable Generator is
as follows.
<pre>
struct counter
{
  typedef int result_type;

  counter() : n(0) {}
  result_type operator()() { return n++; }

  result_type n;
};
</pre>  
<h3>Notes</h3>
<P><A name="1">[1]</A>
Note the implication of this: a function pointer <tt>T (*f)()</tt>
is a <A href="Generator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Generator.shtml">Generator</A>, but not an Adaptable Generator: the
expression <tt>f::result_type</tt> is nonsensical.
<h3>See also</h3>
<A href="Generator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Generator.shtml">Generator</A>, <A href="AdaptableUnaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableUnaryFunction.shtml">Adaptable Unary Function</A>, <A href="AdaptableBinaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryFunction.shtml">Adaptable Binary Function</A> 

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>