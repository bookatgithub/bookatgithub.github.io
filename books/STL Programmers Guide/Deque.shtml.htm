<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>deque¡´T, Alloc¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>deque&lt;T, Alloc&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "containers.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/containers.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: containers</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
A <tt>deque</tt> <A href="#1">[1]</A> is very much like a <tt><A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A></tt>: like <tt>vector</tt>, it is a
sequence that supports random access to elements, constant time
insertion and removal of elements at the end of the sequence, and
linear time insertion and removal of elements in the middle.
<P>
The main way in which <tt>deque</tt> differs from <tt>vector</tt> is
that <tt>deque</tt> also supports constant time insertion and removal
of elements at the beginning of the sequence <A href="#2">[2]</A>.
Additionally, <tt>deque</tt> does not have any member functions
analogous to <tt>vector</tt>'s <tt>capacity()</tt> and
<tt>reserve()</tt>, and does not provide any of the guarantees on
iterator validity that are associated with those member functions.
<A href="#3">[3]</A>
<h3>Example</h3>
<pre>
deque&lt;int&gt; Q;
Q.push_back(3);
Q.push_front(1);
Q.insert(Q.begin() + 1, 2);
Q[2] = 0;
<A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(Q.begin(), Q.end(), <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
// The values that are printed are 1 2 0
</pre>
<h3>Definition</h3>
Defined in <A href="deque.h" tppabs="http://codeguru.developer.com/cpp/stlguide/deque.h">deque.h</A>.
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>T</tt>
</TD>
<TD VAlign=top>
The deque's value type: the type of object that is stored
   in the deque.
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>Alloc</tt>
</TD>
<TD VAlign=top>
The <tt>deque</tt>'s allocator, used for all internal memory management.
</TD>
<TD VAlign=top>
<tt><A href="Allocators.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Allocators.shtml">alloc</A></tt>
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="RandomAccessContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/RandomAccessContainer.shtml">Random access container</A>,
<A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front insertion sequence</A>,
<A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back insertion sequence</A>.
<h3>Type requirements</h3>
None, except for those imposed by the requirements of 
<A href="RandomAccessContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/RandomAccessContainer.shtml">Random access container</A>,
<A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front insertion sequence</A>,
and <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back insertion sequence</A>.
<h3>Public base classes</h3>
None.
<h3>Members</h3>
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>value_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The type of object, <tt>T</tt>, stored in the deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pointer</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Pointer to <tt>T</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reference</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Reference to <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reference</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Const reference to <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
An unsigned integral type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>difference_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
A signed integral type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Iterator used to iterate through a <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_iterator</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Const iterator used to iterate through a <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reverse_iterator</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Iterator used to iterate backwards through a <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reverse_iterator</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Const iterator used to iterate backwards through a <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator begin()</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns an <tt>iterator</tt> pointing to the beginning of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator end()</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns an <tt>iterator</tt> pointing to the end of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_iterator begin() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>const_iterator</tt> pointing to the beginning of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_iterator end() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>const_iterator</tt> pointing to the end of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reverse_iterator rbegin()</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>reverse_iterator</tt> pointing to the beginning of the
   reversed deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reverse_iterator rend()</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>reverse_iterator</tt> pointing to the end of the
   reversed deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reverse_iterator rbegin() const</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>const_reverse_iterator</tt> pointing to the beginning of the
   reversed deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reverse_iterator rend() const</tt>
</TD>
<TD VAlign=top>
 <A href="ReversibleContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReversibleContainer.shtml">Reversible Container</A>
</TD>
<TD VAlign=top>
Returns a <tt>const_reverse_iterator</tt> pointing to the end of the
   reversed deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type size() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns the size of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type max_size() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns the largest possible size of the <tt>deque</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool empty() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
<tt>true</tt> if the <tt>deque</tt>'s size is <tt>0</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reference operator[](size_type n)</tt>
</TD>
<TD VAlign=top>
 <A href="RandomAccessContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/RandomAccessContainer.shtml">Random Access Container</A>
</TD>
<TD VAlign=top>
Returns the <tt>n</tt>'th element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reference operator[](size_type n) const</tt>
</TD>
<TD VAlign=top>
 <A href="RandomAccessContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/RandomAccessContainer.shtml">Random Access Container</A>
</TD>
<TD VAlign=top>
Returns the <tt>n</tt>'th element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>deque()</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Creates an empty deque.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>deque(size_type n)</tt>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Creates a deque with <tt>n</tt> elements.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>deque(size_type n, const T&amp; t)</tt>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Creates a deque with <tt>n</tt> copies of <tt>t</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>deque(const deque&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The copy constructor.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
deque(InputIterator f, InputIterator l)
<A href="#4">[4]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Creates a deque with a copy of a range.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>~deque()</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The destructor.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>deque&amp; operator=(const deque&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The assignment operator
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reference front()</tt>
</TD>
<TD VAlign=top>
 <A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front Insertion Sequence</A>
</TD>
<TD VAlign=top>
Returns the first element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reference front() const</tt>
</TD>
<TD VAlign=top>
 <A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front Insertion Sequence</A>
</TD>
<TD VAlign=top>
Returns the first element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reference back()</tt>
</TD>
<TD VAlign=top>
 <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back Insertion Sequence</A>
</TD>
<TD VAlign=top>
Returns the last element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reference back() const</tt>
</TD>
<TD VAlign=top>
 <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back Insertion Sequence</A>
</TD>
<TD VAlign=top>
Returns the last element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void push_front(const T&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front Insertion Sequence</A>
</TD>
<TD VAlign=top>
Inserts a new element at the beginning.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void push_back(const T&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back Insertion Sequence</A>
</TD>
<TD VAlign=top>
Inserts a new element at the end.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void pop_front()</tt>
</TD>
<TD VAlign=top>
 <A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front Insertion Sequence</A>
</TD>
<TD VAlign=top>
Removes the first element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void pop_back()</tt>
</TD>
<TD VAlign=top>
 <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back Insertion Sequence</A>
</TD>
<TD VAlign=top>
Removes the last element.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void swap(deque&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Swaps the contents of two deques.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
iterator insert(iterator pos, 
                const T&amp; x)
</pre>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Inserts <tt>x</tt> before <tt>pos</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
void insert(iterator pos, 
            InputIterator f, InputIterator l)
<A href="#4">[4]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Inserts the range <tt>[f, l)</tt> before <tt>pos</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
void insert(iterator pos,
            size_type n, const T&amp; x)
</pre>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Inserts <tt>n</tt> copies of <tt>x</tt> before <tt>pos</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator erase(iterator pos)</tt>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Erases the element at position <tt>pos</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator erase(iterator first, iterator last)</tt>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Erases the range <tt>[first, last)</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void clear()</tt>
</TD>
<TD VAlign=top>
 <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
</TD>
<TD VAlign=top>
Erases all of the elements.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
bool operator==(const deque&amp;, 
                const deque&amp;)
</pre>
</TD>
<TD VAlign=top>
 <A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>
</TD>
<TD VAlign=top>
Tests two deques for equality.  This is a global function, not
   a member function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
bool operator&lt;(const deque&amp;, 
               const deque&amp;)
</pre>
</TD>
<TD VAlign=top>
 <A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>
</TD>
<TD VAlign=top>
Lexicographical comparison.  This is a global function, not
   a member function.
</TD>
</tr>
</table>
<h3>New members</h3>
All of <tt>deque</tt>'s members are defined in the 
<A href="RandomAccessContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/RandomAccessContainer.shtml">Random access container</A>,
<A href="FrontInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/FrontInsertionSequence.shtml">Front insertion sequence</A>, 
and <A href="BackInsertionSequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BackInsertionSequence.shtml">Back insertion sequence</A>
requirements.  <tt>Deque</tt> does not introduce any new members.
<h3>Notes</h3>
<P><A name="1">[1]</A>
The name <i>deque</i> is pronounced &quot;deck&quot;, and stands for
&quot;double-ended queue.&quot;  Knuth (section 2.6) reports that the name was
coined by E. J. Schweppe.  See section 2.2.1 of Knuth for more
information about deques.  (D. E. Knuth, <i>The Art of Computer
Programming.  Volume 1: Fundamental Algorithms</i>, second edition.  
Addison-Wesley, 1973.)
<P><A name="2">[2]</A>
Inserting an element at the beginning or end of a <tt>deque</tt> takes
amortized constant time.  Inserting an element in the middle is linear
in <tt>n</tt>, where <tt>n</tt> is the smaller of the number of 
elements from the insertion point to the beginning, and the number of 
elements from the insertion point to the end.
<P><A name="3">[3]</A>
The semantics of iterator invalidation for <tt>deque</tt> is as
follows.  <tt>Insert</tt> (including <tt>push_front</tt> and
<tt>push_back</tt>) invalidates all iterators that refer to a
<tt>deque</tt>.  <tt>Erase</tt> in the middle of a <tt>deque</tt>
invalidates all iterators that refer to the <tt>deque</tt>.  
<tt>Erase</tt> at the beginning or end of a <tt>deque</tt> (including
<tt>pop_front</tt> and <tt>pop_back</tt>) invalidates an iterator only
if it points to the erased element.
<P><A name="4">[4]</A>
This member function relies on <i>member template</i> functions, which
at present (early 1998) are not supported by all compilers.  If your
compiler supports member templates, you can call this function with
any type of <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">input iterator</A>.  If your
compiler does not yet support member templates, though, then the
arguments must either be of type <tt>const value_type*</tt> or of type
<tt>deque::const_iterator</tt>.
<h3>See also</h3>
<tt><A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A></tt>,
<tt><A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A></tt>,
<tt><A href="Slist.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Slist.shtml">slist</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>