<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>Hash Function</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>Hash Function</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "containers.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/containers.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "concept.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/concept.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left><Img src = "functors.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Categories</b>: containers, functors</TD>
<TD Align=right VAlign=top><b>Component type</b>: concept</TD>
</TR>
</Table>

<h3>Description</h3>
A Hash Function is a <A href="UnaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/UnaryFunction.shtml">Unary Function</A> that is used by 
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Containers</A>: it maps its argument to a
result of type <tt>size_t</tt>.  A Hash Function must be deterministic
and stateless.  That is, the return value must depend only 
on the argument, and equal arguments must yield equal results.
<P>
The performance of a <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A> depends
crucially on its hash function.  It is important for a Hash Function
to minimize collisions, where a collision is defined as two different
arguments that hash to the same value.  It is also important that the
distribution of hash values be uniform; that is, the probability that
a Hash Function returns any particular value of type <tt>size_t</tt> should
be roughly the same as the probability that it returns any other
value.  <A href="#1">[1]</A>
<h3>Refinement of</h3>
<A href="UnaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/UnaryFunction.shtml">Unary Function</A>
<h3>Associated types</h3>
<Table border>
<TR>
<TD VAlign=top>
Result type
</TD>
<TD VAlign=top>
The type returned when the Hash Function is called.  The result
   type must be <tt>size_t</tt>.
</TD>
</tr>
</table>
<h3>Notation</h3>
<h3>Definitions</h3>
<h3>Valid expressions</h3>
None, except for those described in the <A href="UnaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/UnaryFunction.shtml">Unary Function</A>
requirements.
<h3>Expression semantics</h3>
<h3>Complexity guarantees</h3>
<h3>Invariants</h3>
<Table border>
<TR>
<TD VAlign=top>
Deterministic function
</TD>
<TD VAlign=top>
The return value depends only on the argument, as opposed to
   the past history of the Hash Function object.  The return value
   is always the same whenever the argument is the same.
</TD>
</tr>
</table>
<h3>Models</h3>
<UL>
<LI>
<tt><A href="hash.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash.shtml">hash</A></tt>
</UL>
<h3>Notes</h3>
<P><A name="1">[1]</A>
Note that both of these requirements make sense only in the
context of some specific distribution of input values.  To take a
simple example, suppose that the values being hashed are the six
strings &quot;aardvark&quot;, &quot;trombone&quot;, &quot;history&quot;, &quot;diamond&quot;, &quot;forthright&quot;,
and &quot;solitude&quot;.  In this case, one reasonable (and efficient) hash
function would simply be the first character of each string.  On the
other hand, suppose that the values being hashed are &quot;aaa0001&quot;,
&quot;aaa0010&quot;, &quot;aaa0011&quot;, &quot;aaa0100&quot;, &quot;aaa0101&quot;, and &quot;aaa0110&quot;.  In that
case, a different hash function would be more appropriate.  This is
why <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Containers</A> are parameterized by the hash
function: no one hash function is best for all applications.  
<h3>See also</h3>
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>, <tt><A href="hash.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash.shtml">hash</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>