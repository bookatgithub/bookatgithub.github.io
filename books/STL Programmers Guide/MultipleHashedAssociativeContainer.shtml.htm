<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>Multiple Hashed Associative Container</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>Multiple Hashed Associative Container</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "containers.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/containers.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "concept.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/concept.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: containers</TD>
<TD Align=right VAlign=top><b>Component type</b>: concept</TD>
</TR>
</Table>

<h3>Description</h3>
A Multiple Hashed Associative Container is a <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative
Container</A> that is also a <A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>.  That
is, it is a <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A> with the property that
any number of elements in the container may have the same key
<h3>Refinement of</h3>
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>,
<A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>
<h3>Associated types</h3>
None, except for those described in the
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A> and
<A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A> requirements.
<h3>Notation</h3>
<Table>
<TR>
<TD VAlign=top>
<tt>X</tt>
</TD>
<TD VAlign=top>
A type that is a model of Hashed Associative Container
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>a</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>t</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::value_type</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>k</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::key_type</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>p</tt>, <tt>q</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::iterator</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>n</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::size_type</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>h</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::hasher</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>c</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X::key_equal</tt>
</TD>
</tr>
</table>
<h3>Definitions</h3>
<h3>Valid expressions</h3>
In addition to the expressions defined in
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A> and
and <A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>,
the following expressions must be valid.
<Table border>
<TR>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Type requirements
</TH>
<TH>
Return type
</TH>
</TR>
<TR>
<TD VAlign=top>
Range constructor
</TD>
<TD VAlign=top>
<pre>
X(i, j)
X a(i, j);
</pre>
</TD>
<TD VAlign=top>
<tt>i</tt> and <tt>j</tt> are <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterators</A> whose value type is convertible
   to <tt>T</tt> <A href="#1">[1]</A>.
</TD>
<TD VAlign=top>
<tt>X</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with bucket count
</TD>
<TD VAlign=top>
<pre>
X(i, j, n)
X a(i, j, n);
</pre>
</TD>
<TD VAlign=top>
<tt>i</tt> and <tt>j</tt> are <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterators</A> whose value type is convertible
   to <tt>T</tt> <A href="#1">[1]</A>.
</TD>
<TD VAlign=top>
<tt>X</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with hash function
</TD>
<TD VAlign=top>
<pre>
X(i, j, n, h)
X a(i, j, n, h);
</pre>
</TD>
<TD VAlign=top>
<tt>i</tt> and <tt>j</tt> are <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterators</A> whose value type is convertible
   to <tt>T</tt> <A href="#1">[1]</A>.
</TD>
<TD VAlign=top>
<tt>X</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with key equal
</TD>
<TD VAlign=top>
<pre>
X(i, j, n, h, k)
X a(i, j, n, h, k);
</pre>
</TD>
<TD VAlign=top>
<tt>i</tt> and <tt>j</tt> are <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterators</A> whose value type is convertible
   to <tt>T</tt> <A href="#1">[1]</A>.
</TD>
<TD VAlign=top>
<tt>X</tt>
</TD>
</tr>
</table>
<h3>Expression semantics</h3>
<Table border>
<TR>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Precondition
</TH>
<TH>
Semantics
</TH>
<TH>
Postcondition
</TH>
</TR>
<TR>
<TD VAlign=top>
Range constructor
</TD>
<TD VAlign=top>
<pre>
X(i, j)
X a(i, j);
</pre>
</TD>
<TD VAlign=top>
<tt>[i,j)</tt> is a valid range.
</TD>
<TD VAlign=top>
Creates an associative container that contains all elements in the range <tt>[i,j)</tt>,
   using <tt>hasher()</tt> as the hash function 
   and <tt>key_equal()</tt> as the key equality function.
</TD>
<TD VAlign=top>
<tt>size()</tt> is equal to the distance from <tt>i</tt> to <tt>j</tt>.
   The bucket count is an unspecified default value.  The hash 
   function is <tt>hasher()</tt>, and the key equality function is <tt>key_equal()</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with bucket count
</TD>
<TD VAlign=top>
<pre>
X(i, j, n)
X a(i, j, n);
</pre>
</TD>
<TD VAlign=top>
<tt>[i,j)</tt> is a valid range.
</TD>
<TD VAlign=top>
Creates an associative container that contains all elements
 in the range <tt>[i,j)</tt>, using at least <tt>n</tt>
 buckets, and using <tt>hasher()</tt> as the hash function and <tt>key_equal()</tt>
 as the key equality function.
</TD>
<TD VAlign=top>
<tt>size()</tt> is equal to the distance from <tt>i</tt> to <tt>j</tt>.
   The bucket count is greater than or equal to <tt>n</tt>.  The hash 
   function is <tt>hasher()</tt>, and the key equality function is <tt>key_equal()</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with hash function
</TD>
<TD VAlign=top>
<pre>
X(i, j, n, h)
X a(i, j, n, h);
</pre>
</TD>
<TD VAlign=top>
<tt>[i,j)</tt> is a valid range.
</TD>
<TD VAlign=top>
Creates an associative container that contains all elements
 in the range <tt>[i,j)</tt>, using at least <tt>n</tt>
 buckets, and using <tt>h</tt> as the hash function and <tt>key_equal()</tt>
 as the key equality function.
</TD>
<TD VAlign=top>
<tt>size()</tt> is equal to the distance from <tt>i</tt> to <tt>j</tt>.
   The bucket count is greater than or equal to <tt>n</tt>.  The hash 
   function is <tt>h</tt>, and the key equality function is <tt>key_equal()</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
Range constructor with key equal
</TD>
<TD VAlign=top>
<pre>
X(i, j, n, h, k)
X a(i, j, n, h, k);
</pre>
</TD>
<TD VAlign=top>
<tt>[i,j)</tt> is a valid range.
</TD>
<TD VAlign=top>
Creates an associative container that contains all elements
 in the range <tt>[i,j)</tt>, using at least <tt>n</tt>
 buckets, and using <tt>h</tt> as the hash function and <tt>k</tt>
 as the key equality function.
</TD>
<TD VAlign=top>
<tt>size()</tt> is equal to the distance from <tt>i</tt> to <tt>j</tt>.
   The bucket count is greater than or equal to <tt>n</tt>.  The hash 
   function is <tt>h</tt>, and the key equality function is <tt>k</tt>.
</TD>
</tr>
</table>
<h3>Complexity guarantees</h3>
The range constructor, range constructor with bucket count,
range constructor with hash function, and 
range constructor with key equal, are all linear in <tt>j - i</tt>.
<h3>Invariants</h3>
<h3>Models</h3>
<UL>
<LI>
<tt><A href="hash_multiset.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_multiset.shtml">hash_multiset</A></tt>
<LI>
<tt><A href="hash_multimap.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_multimap.shtml">hash_multimap</A></tt>
</UL>
<h3>Notes</h3>
<P><A name="1">[1]</A>
At present (early 1998), not all compilers support
&quot;member templates&quot;.  If your compiler supports member
templates then <tt>i</tt> and <tt>j</tt> may be of any type that
conforms to the <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>
requirements.  If your compiler does not yet support member
templates, however, then <tt>i</tt> and <tt>j</tt> must be of type
<tt>const T*</tt> or of type <tt>X::const_iterator</tt>.
<h3>See also</h3>
<A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>, 
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>,
<A href="UniqueHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/UniqueHashedAssociativeContainer.shtml">Unique Hashed Associative Container</A>
<A href="SortedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/SortedAssociativeContainer.shtml">Sorted Associative Container</A>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>