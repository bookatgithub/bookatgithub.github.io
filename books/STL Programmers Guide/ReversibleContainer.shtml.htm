<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>Reversible Container</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>Reversible Container</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "containers.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/containers.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "concept.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/concept.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: containers</TD>
<TD Align=right VAlign=top><b>Component type</b>: concept</TD>
</TR>
</Table>

<h3>Description</h3>
A Reversible Container is a <A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A> whose iterators are
<A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterators</A>.  It allows backwards iteration through
the container.
<h3>Refinement of</h3>
<A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>
<h3>Associated types</h3>
Two new types are introduced.  In addition, the iterator type and the
const iterator type must satisfy a more stringent requirement than
for a <A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>.  The iterator and reverse iterator types must
be <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterators</A>, not merely <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterators</A>.
<Table border>
<TR>
<TD VAlign=top>
Reverse iterator type
</TD>
<TD VAlign=top>
<tt>X::reverse_iterator</tt>
</TD>
<TD VAlign=top>
A <A href="ReverseIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReverseIterator.shtml">Reverse Iterator</A> adaptor whose base iterator type
   is the container's iterator type.  Incrementing an object of type 
   <tt>reverse_iterator</tt> moves backwards through the container: 
   the <A href="ReverseIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReverseIterator.shtml">Reverse Iterator</A> adaptor maps <tt>operator++</tt> to <tt>operator--</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
Const reverse iterator type
</TD>
<TD VAlign=top>
<tt>X::const_reverse_iterator</tt>
</TD>
<TD VAlign=top>
A <A href="ReverseIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ReverseIterator.shtml">Reverse Iterator</A> adaptor whose base iterator type
   is the container's const iterator type. <A href="#1">[1]</A>
</TD>
</tr>
</table>
<h3>Notation</h3>
<Table>
<TR>
<TD VAlign=top>
<tt>X</tt>
</TD>
<TD VAlign=top>
A type that is a model of Reversible Container
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>a</tt>, <tt>b</tt>
</TD>
<TD VAlign=top>
Object of type <tt>X</tt>
</TD>
</tr>
</table>
<h3>Definitions</h3>
<h3>Valid expressions</h3>
In addition to the expressions defined in <A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>, the following
expressions must be valid.
<Table border>
<TR>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Type requirements
</TH>
<TH>
Return type
</TH>
</TR>
<TR>
<TD VAlign=top>
Beginning of range
</TD>
<TD VAlign=top>
<tt>a.rbegin()</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
<TD VAlign=top>
<tt>reverse_iterator</tt> if <tt>a</tt> is mutable, <tt>const_reverse_iterator</tt>
   otherwise <A href="#1">[1]</A>
</TD>
</TR>
<TR>
<TD VAlign=top>
End of range
</TD>
<TD VAlign=top>
<tt>a.rend()</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
<TD VAlign=top>
<tt>reverse_iterator</tt> if <tt>a</tt> is mutable, <tt>const_reverse_iterator</tt>
   otherwise <A href="#1">[1]</A>
</TD>
</tr>
</table>
<h3>Expression semantics</h3>
Semantics of an expression is defined only where it is not defined in
<A href="ForwardContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardContainer.shtml">Forward Container</A>, or where there is additional information.
<Table border>
<TR>
<TH>
Name
</TH>
<TH>
Expression
</TH>
<TH>
Precondition
</TH>
<TH>
Semantics
</TH>
<TH>
Postcondition
</TH>
</TR>
<TR>
<TD VAlign=top>
Beginning of reverse range
</TD>
<TD VAlign=top>
<tt>a.rbegin()</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
<TD VAlign=top>
Equivalent to <tt>X::reverse_iterator(a.end())</tt>.
</TD>
<TD VAlign=top>
<tt>a.rbegin()</tt> is dereferenceable or past-the-end.  It is past-the-end
   if and only if <tt>a.size() == 0</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
End of reverse range
</TD>
<TD VAlign=top>
<tt>a.rend()</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
<TD VAlign=top>
Equivalent to <tt>X::reverse_iterator(a.begin())</tt>.
</TD>
<TD VAlign=top>
<tt>a.end()</tt> is past-the-end.
</TD>
</tr>
</table>
<h3>Complexity guarantees</h3>
The run-time complexity of <tt>rbegin()</tt> and <tt>rend()</tt> is amortized 
constant time.
<h3>Invariants</h3>
<Table border>
<TR>
<TD VAlign=top>
Valid range
</TD>
<TD VAlign=top>
<tt>[a.rbegin(), a.rend())</tt> is a valid range.
</TD>
</TR>
<TR>
<TD VAlign=top>
Equivalence of ranges
</TD>
<TD VAlign=top>
The distance from <tt>a.begin()</tt> to <tt>a.end()</tt> is the same as the
   distance from <tt>a.rbegin()</tt> to <tt>a.rend()</tt>.
</TD>
</tr>
</table>
<h3>Models</h3>
<UL>
<LI>
 <A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>
<LI>
 <A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A>
<LI>
 <A href="Deque.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Deque.shtml">deque</A>
</UL>
<h3>Notes</h3>
<P><A name="1">[1]</A>
A <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>'s iterator type and const iterator type may be the
same type: a container need not provide mutable iterators.  
It follows from this that the reverse iterator type and
the const reverse iterator type may also be the same.
<h3>See also</h3>
The <A href="Iterators.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Iterators.shtml">Iterator overview</A>, <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A>, <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>