<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>adjacent_difference</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>adjacent_difference</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "algorithms.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/algorithms.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "function.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/function.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: algorithms</TD>
<TD Align=right VAlign=top><b>Component type</b>: function</TD>
</TR>
</Table>

<h3>Prototype</h3>
<tt>Adjacent_difference</tt> is an overloaded name; there are actually two <tt>adjacent_difference</tt>
functions.
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>, class <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">OutputIterator</A>&gt;
OutputIterator adjacent_difference(InputIterator first, InputIterator last, 
                                   OutputIterator result);

template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>, class <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">OutputIterator</A>, class <A href="BinaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryFunction.shtml">BinaryFunction</A>&gt;
OutputIterator adjacent_difference(InputIterator first, InputIterator last,
                                   OutputIterator result,
                                   BinaryFunction binary_op);
</pre> 
<h3>Description</h3>
<tt>Adjacent_difference</tt> calculates the differences of adjacent elements
in the range <tt>[first, last)</tt>.  This is, <tt>*first</tt> is assigned to
<tt>*result</tt> <A href="#1">[1]</A>, and, for each iterator <tt>i</tt> in the range <tt>[first + 1,
last)</tt>, the difference of <tt>*i</tt> and <tt>*(i - 1)</tt> is assigned to
<tt>*(result + (i - first))</tt>. <A href="#2">[2]</A>
<P>
The first version of <tt>adjacent_difference</tt> uses <tt>operator-</tt> to
calculate differences, and the second version uses a user-supplied
<A href="BinaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryFunction.shtml">binary function</A>.  In the first version, for each iterator
<tt>i</tt> in the range <tt>[first + 1, last)</tt>, 
<tt>*i - *(i - 1)</tt> is assigned to <tt>*(result + (i - first))</tt>.
In the second version, the value that is assigned to <tt>*(result + 1)</tt>
is instead <tt>binary_op(*i, *(i - 1))</tt>.
<h3>Definition</h3>
Defined in <A href="algo.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algo.h">algo.h</A>.
<h3>Requirements on types</h3>
For the first version:
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>OutputIterator</tt> is a model of <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">Output Iterator</A>.
<LI>
If <tt>x</tt> and <tt>y</tt> are objects of <tt>ForwardIterator</tt>'s value type,
   then <tt>x - y</tt> is defined.
<LI>
<tt>InputIterator</tt>s value type is convertible to a type in
   <tt>OutputIterator</tt>'s set of value types.
<LI>
The return type of <tt>x - y</tt> is convertible to a type in
   <tt>OutputIterator</tt>'s set of value types.
</UL>
For the second version:
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>OutputIterator</tt> is a model of <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">Output Iterator</A>.
<LI>
<tt>BinaryFunction</tt> is a model of <A href="BinaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryFunction.shtml">Binary Function</A>.
<LI>
<tt>InputIterator</tt>'s value type is convertible to a
   <tt>BinaryFunction</tt>'s first argument type and second argument type.
<LI>
<tt>InputIterator</tt>s value type is convertible to a type in
   <tt>OutputIterator</tt>'s set of value types.
<LI>
<tt>BinaryFunction</tt>'s result type is convertible to a type in
   <tt>OutputIterator</tt>'s set of value types.
</UL>
<h3>Preconditions</h3>
<UL>
<LI>
<tt>[first, last)</tt> is a valid range.
<LI>
<tt>[result, result + (last - first))</tt> is a valid range.
</UL>
<h3>Complexity</h3>
Linear.  Zero applications of the binary operation if <tt>[first, last)</tt>
is an empty range, otherwise exactly <tt>(last - first) - 1</tt> applications.
<h3>Example</h3>
<pre>
int main()
{
  int A[] = {1, 4, 9, 16, 25, 36, 49, 64, 81, 100};
  const int N = sizeof(A) / sizeof(int);
  int B[N];

  cout &lt;&lt; &quot;A[]:         &quot;;
  <A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(A, A + N, <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
  cout &lt;&lt; endl;
  
  adjacent_difference(A, A + N, B);
  cout &lt;&lt; &quot;Differences: &quot;;
  <A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(B, B + N, <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
  cout &lt;&lt; endl;

  cout &lt;&lt; &quot;Reconstruct: &quot;;
  partial_sum(B, B + N, <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
  cout &lt;&lt; endl;
}
</pre>
<h3>Notes</h3>
<P><A name="1">[1]</A>
The reason it is useful to store the value of the first element,
as well as simply storing the differences, is that this provides
enough information to reconstruct the input range.  In particular, 
if addition and subtraction have the usual arithmetic definitions, then
<tt>adjacent_difference</tt> and <tt><A href="partial_sum.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/partial_sum.shtml">partial_sum</A></tt> are inverses of each other.
<P><A name="2">[2]</A>
Note that <tt>result</tt> is permitted to be the same iterator as
<tt>first</tt>.  This is useful for computing differences &quot;in place&quot;.
<h3>See also</h3>
<tt><A href="partial_sum.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/partial_sum.shtml">partial_sum</A></tt>, <tt><A href="accumulate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/accumulate.shtml">accumulate</A></tt>, <tt><A href="inner_product.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/inner_product.shtml">inner_product</A></tt>, 
<tt><A href="count.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/count.shtml">count</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>