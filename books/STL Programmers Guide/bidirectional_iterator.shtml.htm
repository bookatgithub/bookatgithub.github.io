<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>bidirectional_iterator¡´T, Distance¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>bidirectional_iterator&lt;T, Distance&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "iterators.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/iterators.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: iterators</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
<tt>Bidirectional_iterator</tt> is an iterator base class: it is intended that an
iterator that is a model of <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A>, and whose value type
and distance type are <tt>T</tt> and <tt>Distance</tt>, may be defined by inheriting from
<tt>bidirectional_iterator&lt;T, Distance&gt;</tt> <A href="#1">[1]</A>.  <tt>Bidirectional_iterator</tt> is entirely empty: it has no
member functions, member variables, or nested types.  It exists solely
to simplify the definition of the functions <tt><A href="iterator_category.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_category.shtml">iterator_category</A></tt>,
<tt><A href="distance_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/distance_type.shtml">distance_type</A></tt>, and <tt><A href="value_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/value_type.shtml">value_type</A></tt>.
<h3>Example</h3>
<pre>
class my_bidirectional_iterator : public bidirectional_iterator&lt;double&gt; 
{
  ...
};
</pre>
This declares <tt>my_bidirectional_iterator</tt> to be a <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A> whose
value type is <tt>double</tt> and whose distance type is <tt>ptrdiff_t</tt>.  
If <tt>Iter</tt> is an object of class <tt>my_bidirectional_iterator</tt>, then
<tt><A href="iterator_category.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_category.shtml">iterator_category</A>(Iter)</tt> will return <tt><A href="bidirectional_iterator_tag.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/bidirectional_iterator_tag.shtml">bidirectional_iterator_tag</A>()</tt>,
<tt><A href="value_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/value_type.shtml">value_type</A>(Iter)</tt> will return <tt>(double*) 0</tt>, and <tt><A href="distance_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/distance_type.shtml">distance_type</A>(Iter)</tt>
will return <tt>(ptrdiff_t*) 0</tt>.
<h3>Definition</h3>
Defined in <A href="iterator.h" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator.h">iterator.h</A>
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>T</tt>
</TD>
<TD VAlign=top>
The iterator's value type
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>Distance</tt>
</TD>
<TD VAlign=top>
The iterator's distance type
</TD>
<TD VAlign=top>
<tt>ptrdiff_t</tt>
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>
<h3>Public base classes</h3>
None
<h3>Type requirements</h3>
The distance type must be a signed integral type.
<h3>Public base classes</h3>
None.
<h3>Members</h3>
None.
<h3>New Members</h3>
None.
<h3>Notes</h3>
<P><A name="1">[1]</A>
It is not required that a <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A> inherit from
the base <tt>bidirectional_iterator</tt>.  It is, however, required that the
functions <tt><A href="iterator_category.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_category.shtml">iterator_category</A></tt>, <tt><A href="distance_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/distance_type.shtml">distance_type</A></tt>, and
<tt><A href="value_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/value_type.shtml">value_type</A></tt> be defined for every <A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A>.
(Or, if you are using the <tt><A href="iterator_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_traits.shtml">iterator_traits</A></tt> mechanism, that
<tt>iterator_traits</tt> is properly specialized for every 
<A href="BidirectionalIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BidirectionalIterator.shtml">Bidirectional Iterator</A>.)  Since those functions are defined for
the base <tt>bidirectional_iterator</tt>, the easiest way to ensure that are
defined for a new type is to derive that class from
<tt>bidirectional_iterator</tt> and rely on the derived-to-base standard
conversion of function arguments.
<h3>See also</h3>
The <A href="iterator_tags.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_tags.shtml">Iterator Tags</A> overview, <tt><A href="iterator_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_traits.shtml">iterator_traits</A></tt>,
<tt><A href="iterator_category.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_category.shtml">iterator_category</A></tt>,
<tt><A href="value_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/value_type.shtml">value_type</A></tt>, <tt><A href="distance_type.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/distance_type.shtml">distance_type</A></tt>,
<tt><A href="input_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/input_iterator.shtml">input_iterator</A></tt>, <tt><A href="output_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/output_iterator.shtml">output_iterator</A></tt>,
<tt><A href="forward_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/forward_iterator.shtml">forward_iterator</A></tt>, <tt><A href="random_access_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/random_access_iterator.shtml">random_access_iterator</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>