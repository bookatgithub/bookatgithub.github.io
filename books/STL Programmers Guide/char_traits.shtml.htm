<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>char_traits</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>char_traits</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "utilities.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/utilities.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: utilities</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
The <tt>char_traits</tt> class is the default <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A> class used
by the library; it is the only predefined <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A> class.
<h3>Example</h3>
The <tt>char_traits</tt> class is of no use by itself.  It is used as a
template parameter of other classes, such as the <tt><A href="basic_string.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/basic_string.shtml">basic_string</A></tt>
template.  
<h3>Definition</h3>
Defined in <A href="string.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/string">string</A>.
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>charT</tt>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s value type, <i>i.e.</i> <tt>char_traits&lt;&gt;::char_type</tt>.
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
<h3>Type requirements</h3>
<tt>charT</tt> is either <tt>char</tt> or <tt>wchar_t</tt>.  
<P>
(All of <tt>char_traits</tt>'s member functions are defined for arbitrary
types, but some of <tt>char_traits</tt>'s members must be explicitly specialized
if <tt>char_traits</tt> is to be useful for other types than <tt>char</tt> and
<tt>wchar_t</tt>.
<h3>Public base classes</h3>
None.
<h3>Members</h3>
All of <tt>char_traits</tt>'s members are static.  There is never any reason
to create an object of type <tt>char_traits</tt>.
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>char_type</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s value type: <tt>charT</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>int_type</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s int type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pos_type</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s position type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>off_type</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s offset type
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>state_type</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
<tt>char_traits</tt>'s state type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static void assign(char_type&amp; c1, const char_type&amp; c2)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Assigns <tt>c2</tt> to <tt>c1</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static bool eq(const char_type&amp; c1, const char_type&amp; c2)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Character equality.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static bool lt(const char_type&amp; c1, const char_type&amp; c2)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Returns <tt>true</tt> if <tt>c1</tt> is less than <tt>c2</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static int compare(const char_type* p1, const char_type* p2, size_t n)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Three-way lexicographical comparison, much like <tt>strncmp</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
Length
</TD>
<TD VAlign=top>
<tt>static size_t length(const char* p)</tt>
</TD>
<TD VAlign=top>
Returns length of a null-terminated array of characters.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static const char_type* find(const char_type* p, size_t n, const char_type&amp; c)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Finds <tt>c</tt> in <tt>[p, p+n)</tt>, returning 0 if not found.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static char_type* move(char_type* s, const char_type* p, size_t n)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Copies characters from <tt>[p, p+n)</tt> to the (possibly overlapping)
   range <tt>[s, s+n)</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static char_type* copy(char_type* s, const char_type* p, size_t n)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Copies characters from <tt>[p, p+n)</tt> to the (non-overlapping)
   range <tt>[s, s+n)</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static char_type* assign(char_type* s, size_t n, char_type c)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Assigns the value <tt>c</tt> to every element in the range <tt>[s, s+n)</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static int_type eof()</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Returns the value used as an EOF indicator.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static int_type not_eof(const int_type&amp; c)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Returns a value that is not equal to <tt>eof()</tt>.  Returns <tt>c</tt> unless
   <tt>c</tt> is equal to <tt>eof()</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static char_type to_char_type(const int_type&amp; c)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Returns the <tt>char_type</tt> value corresponding to <tt>c</tt>, if such a value
   exists.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static int_type to_int_type(const char_type&amp; c)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Returns a <tt>int_type</tt> representation of <tt>c</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>static bool eq_int_type(cosnt int_type&amp; c1, const int_type&amp; c1)</tt>
</TD>
<TD VAlign=top>
 <A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>
</TD>
<TD VAlign=top>
Tests whether two <tt>int_type</tt> values are equal.  If the values can
   also be represented as <tt>char_type</tt>, then <tt>eq</tt> and <tt>eq_int_type</tt> must 
   be consistent with each other.
</TD>
</tr>
</table>
<h3>New members</h3>
None.  All of <tt>char_traits</tt>'s members are defined in the 
<A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A> requirements.
<h3>Notes</h3>
<h3>See also</h3>
<A href="character_traits.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/character_traits.shtml">Character Traits</A>, <tt><A href="basic_string.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/basic_string.shtml">string</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>