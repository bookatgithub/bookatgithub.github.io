<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>copy</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>copy</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "algorithms.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/algorithms.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "function.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/function.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: algorithms</TD>
<TD Align=right VAlign=top><b>Component type</b>: function</TD>
</TR>
</Table>

<h3>Prototype</h3>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>, class <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">OutputIterator</A>&gt;
OutputIterator copy(InputIterator first, InputIterator last,
                    OutputIterator result);
</pre>                   
<h3>Description</h3>
<tt>Copy</tt> copies elements from the range <tt>[first, last)</tt> to the range
<tt>[result, result + (last - first))</tt>.  That is, it performs the 
assignments <tt>*result = *first</tt>, <tt>*(result + 1) = *(first + 1)</tt>,
and so on.  <A href="#1">[1]</A> Generally, for every integer <tt>n</tt> from <tt>0</tt> to <tt>last - first</tt>,
<tt>copy</tt> performs the assignment <tt>*(result + n) = *(first + n)</tt>.
Assignments are performed in forward order, <i>i.e.</i> in order of 
increasing <tt>n</tt>. <A href="#2">[2]</A>
<P>
The return value is <tt>result + (last - first)</tt>
<h3>Definition</h3>
Declared in <A href="algo.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algo.h">algo.h</A>.  The implementation is in 
<A href="algobase.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algobase.h">algobase.h</A>.
<h3>Requirements on types</h3>
<UL>
<LI>
InputIterator is a model of <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>.
<LI>
OutputIterator is a model of <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">Output Iterator</A>.
<LI>
InputIterator's value type is convertible to a type in
   OutputIterator's set of value types.
</UL>
<h3>Preconditions</h3>
<UL>
<LI>
<tt>[first, last)</tt> is a valid range.
<LI>
<tt>result</tt> is not an iterator within the range <tt>[first, last)</tt>.
<LI>
There is enough space to hold all of the elements being copied.
   More formally, the requirement is that 
   <tt>[result, result + (last - first))</tt> is a valid range. <A href="#1">[1]</A>
</UL>
<h3>Complexity</h3>
Linear.  Exactly <tt>last - first</tt> assignments are performed.
<h3>Example</h3>
<pre>
<A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>&lt;int&gt; V(5);
<A href="iota.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iota.shtml">iota</A>(V.begin(), V.end(), 1);

<A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A>&lt;int&gt; L(V.size());
copy(V.begin(), V.end(), L.begin());
assert(<A href="equal.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/equal.shtml">equal</A>(V.begin(), V.end(), L.begin()));
</pre>
<h3>Notes</h3>
<P><A name="1">[1]</A>
Note the implications of this.  <tt>Copy</tt> cannot be used to insert
elements into an empty <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>: it overwrites elements, rather
than inserting elements.  If you want to insert elements into a
<A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>, you can either use its <tt>insert</tt> member function explicitly,
or else you can use <tt>copy</tt> along with an <tt><A href="insert_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/insert_iterator.shtml">insert_iterator</A></tt> adaptor.
<P><A name="2">[2]</A>
The order of assignments matters in the case where the input and
output ranges overlap: <tt>copy</tt> may not be used if <tt>result</tt> is in the
range <tt>[first, last)</tt>.  That is, it may not be used if
the beginning of the output range overlaps with the input range, but
it may be used if the end of the output range overlaps with the input
range; <tt><A href="copy_backward.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy_backward.shtml">copy_backward</A></tt> has opposite restrictions.
If the two ranges are completely nonoverlapping, of course, then
either algorithm may be used.
The order of assignments also matters if <tt>result</tt> is an <tt><A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A></tt>,
or some other iterator whose semantics depends on the order or assignments.
<h3>See also</h3>
<tt><A href="copy_backward.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy_backward.shtml">copy_backward</A></tt>, <tt><A href="copy_n.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy_n.shtml">copy_n</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>