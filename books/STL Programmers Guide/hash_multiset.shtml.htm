<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>hash_multiset¡´Key, HashFcn, EqualKey, Alloc¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>hash_multiset&lt;Key, HashFcn, EqualKey, Alloc&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "containers.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/containers.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: containers</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
<tt>Hash_multiset</tt> is a
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
that stores objects of type <tt>Key</tt>.
<tt>Hash_multiset</tt> is a
<A href="SimpleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/SimpleAssociativeContainer.shtml">simple associative container</A>,
meaning that its value type, as well as its key type,
is <tt>Key</tt>.  It is also a
<A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>,
meaning that two or more elements may compare equal
using the <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">Binary Predicate</A>
<tt>EqualKey</tt>.
<P>
<tt>Hash_multiset</tt> is useful in applications where it is important
to be able to search for an element quickly.  If it is important for
the elements to be in a particular order, however, then
<tt><A href="multiset.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/multiset.shtml">multiset</A></tt> is more appropriate.
<h3>Example</h3>
<pre>
struct eqstr
{
  bool operator()(const char* s1, const char* s2) const
  {
    return strcmp(s1, s2) == 0;
  }
};

void lookup(const hash_multiset&lt;const char*, hash&lt;const char*&gt;, eqstr&gt;&amp; Set,
            const char* word)
{
  int n_found = Set.count(word);
  cout &lt;&lt; word &lt;&lt; &quot;: &quot;
       &lt;&lt; n_found &lt;&lt; &quot; &quot;
       &lt;&lt; (n_found == 1 ? &quot;instance&quot; : &quot;instances&quot;)
       &lt;&lt; endl;
}

int main()
{
  hash_multiset&lt;const char*, hash&lt;const char*&gt;, eqstr&gt; Set;
  Set.insert(&quot;mango&quot;);
  Set.insert(&quot;kiwi&quot;);
  Set.insert(&quot;apple&quot;);
  Set.insert(&quot;kiwi&quot;);
  Set.insert(&quot;mango&quot;);
  Set.insert(&quot;mango&quot;);
  Set.insert(&quot;apricot&quot;);
  Set.insert(&quot;banana&quot;);
  Set.insert(&quot;mango&quot;);

  lookup(Set, &quot;mango&quot;);
  lookup(Set, &quot;apple&quot;);
  lookup(Set, &quot;durian&quot;);
}
</pre>
<h3>Definition</h3>
<tt>Hash_multiset</tt> is declared in
<A href="hash_set.h" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_set.h">hash_set.h</A>.  The implementation is in
<A href="hash_set.h" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_set.h">hash_set.h</A> and 
<A href="hashtable.h" tppabs="http://codeguru.developer.com/cpp/stlguide/hashtable.h">hashtable.h</A>.
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>Key</tt>
</TD>
<TD VAlign=top>
The hash_multiset's key type and value type.  This is also defined as <tt>hash_multiset::key_type</tt>
   and <tt>hash_multiset::value_type</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>HashFcn</tt>
</TD>
<TD VAlign=top>
The <A href="HashFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashFunction.shtml">Hash Function</A> used by the hash_multiset.  This is also defined
   as <tt>hash_multiset::hasher</tt>.  
</TD>
<TD VAlign=top>
<tt><A href="hash.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash.shtml">hash</A>&lt;Key&gt;</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>EqualKey</tt>
</TD>
<TD VAlign=top>
The hash_multiset's key equality function: a <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">binary predicate</A> that
   determines whether two keys are equal.  This is also defined as
   <tt>hash_multiset::key_equal</tt>.
</TD>
<TD VAlign=top>
<tt><A href="equal_to.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/equal_to.shtml">equal_to</A>&lt;Key&gt;</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>Alloc</tt>
</TD>
<TD VAlign=top>
The <tt>hash_multiset</tt>'s allocator, used for all internal memory management.
</TD>
<TD VAlign=top>
<tt><A href="Allocators.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Allocators.shtml">alloc</A></tt>
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>,
<A href="SimpleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/SimpleAssociativeContainer.shtml">Simple Associative Container</A>
<h3>Type requirements</h3>
<UL>
<LI>
<tt>Key</tt> is <A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">assignable</A>.
<LI>
<tt>EqualKey</tt> is a <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">Binary Predicate</A> whose argument type
   is <tt>Key</tt>.
<LI>
<tt>EqualKey</tt> is an equivalence relation.
<LI>
<tt>Alloc</tt> is an <A href="Allocators.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Allocators.shtml">Allocator</A>.
</UL>
<h3>Public base classes</h3>
None.
<h3>Members</h3>
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>value_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The type of object, <tt>T</tt>, stored in the hash_multiset.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>key_type</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
The key type associated with <tt>value_type</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hasher</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
The <tt>hash_multiset</tt>'s <A href="HashFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashFunction.shtml">Hash Function</A>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>key_equal</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
 <A href="functors.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.shtml">Function object</A> that compares keys for equality.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pointer</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Pointer to <tt>T</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>reference</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Reference to <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_reference</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Const reference to <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
An unsigned integral type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>difference_type</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
A signed integral type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Iterator used to iterate through a <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const_iterator</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Const iterator used to iterate through a <tt>hash_multiset</tt>.  (<tt>Iterator</tt> and
   <tt>const_iterator</tt> are the same type.)
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator begin() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns an <tt>iterator</tt> pointing to the beginning of the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator end() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns an <tt>iterator</tt> pointing to the end of the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type size() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns the size of the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type max_size() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Returns the largest possible size of the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool empty() const</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
<tt>true</tt> if the <tt>hash_multiset</tt>'s size is <tt>0</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type bucket_count() const</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Returns the number of buckets used by the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void resize(size_type n)</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Increases the bucket count to at least <tt>n</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hasher hash_funct() const</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Returns the <tt>hasher</tt> object used by the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>key_equal key_eq() const</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Returns the <tt>key_equal</tt> object used by the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hash_multiset()</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Creates an empty <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hash_multiset(size_type n)</tt>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates an empty <tt>hash_multiset</tt> with at least <tt>n</tt> buckets.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
hash_multiset(size_type n, 
              const hasher&amp; h)
</pre>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates an empty <tt>hash_multiset</tt> with at least <tt>n</tt> buckets, using <tt>h</tt>
   as the hash function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
hash_multiset(size_type n, 
              const hasher&amp; h, 
              const key_equal&amp; k)
</pre>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates an empty <tt>hash_multiset</tt> with at least <tt>n</tt> buckets, using <tt>h</tt>
   as the hash function and <tt>k</tt> as the key equal function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
hash_multiset(InputIterator, InputIterator)
<A href="#1">[1]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates a hash_multiset with a copy of a range.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
hash_multiset(InputIterator, InputIterator,
              size_type n)
<A href="#1">[1]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates a hash_multiset with a copy of a range and a bucket count of at
   least <tt>n</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
hash_multiset(InputIterator, InputIterator,
              size_type n, const hasher&amp; h)
<A href="#1">[1]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates a hash_multiset with a copy of a range and a bucket count of at
   least <tt>n</tt>, using <tt>h</tt> as the hash function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
hash_multiset(InputIterator, InputIterator,
              size_type n, const hasher&amp; h, 
              const key_equal&amp; k)
<A href="#1">[1]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Creates a hash_multiset with a copy of a range and a bucket count of at
   least <tt>n</tt>, using <tt>h</tt> as the hash function and <tt>k</tt> as the
   key equal function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hash_multiset(const hash_multiset&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The copy constructor.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>hash_multiset&amp; operator=(const hash_multiset&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
The assignment operator
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void swap(hash_multiset&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>
</TD>
<TD VAlign=top>
Swaps the contents of two hash_multisets.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator insert(const value_type&amp; x)</tt>
</TD>
<TD VAlign=top>
 <A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>
</TD>
<TD VAlign=top>
Inserts <tt>x</tt> into the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">InputIterator</A>&gt;
void insert(InputIterator, InputIterator)
<A href="#1">[1]</A>
</pre>
</TD>
<TD VAlign=top>
 <A href="MultipleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleAssociativeContainer.shtml">Multiple Associative Container</A>
</TD>
<TD VAlign=top>
Inserts a range into the <tt>hash_multiset</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void erase(iterator pos)</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Erases the element pointed to by <tt>pos</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type erase(const key_type&amp; k)</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Erases the element whose key is <tt>k</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void erase(iterator first, iterator last)</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Erases all elements in a range.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>void clear()</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Erases all of the elements.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>iterator find(const key_type&amp; k) const</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Finds an element whose key is <tt>k</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>size_type count(const key_type&amp; k) const</tt>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Counts the number of elements whose key is <tt>k</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
pair&lt;iterator, iterator&gt; 
equal_range(const key_type&amp; k) const
</pre>
</TD>
<TD VAlign=top>
 <A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>
</TD>
<TD VAlign=top>
Finds a range containing all elements whose key is <tt>k</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
bool operator==(const hash_multiset&amp;, 
                const hash_multiset&amp;)
</pre>
</TD>
<TD VAlign=top>
 <A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>
</TD>
<TD VAlign=top>
Tests two hash_multisets for equality.   This is a global function,
   not a member function.
</TD>
</tr>
</table>
<h3>New members</h3>
All of <tt>hash_multiset</tt>'s members are defined in the 
<A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A> and
<A href="SimpleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/SimpleAssociativeContainer.shtml">Simple Associative Container</A>
requirements.  <tt>Hash_multiset</tt> does not introduce
any new members.
<h3>Notes</h3>
<P><A name="1">[1]</A>
This member function relies on <i>member template</i> functions, which
at present (early 1998) are not supported by all compilers.  If your
compiler supports member templates, you can call this function with
any type of <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">input iterator</A>.  If your
compiler does not yet support member templates, though, then the
arguments must either be of type <tt>const value_type*</tt> or of type
<tt>hash_multiset::const_iterator</tt>.
<h3>See also</h3>
<A href="AssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AssociativeContainer.shtml">Associative Container</A>,
<A href="HashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/HashedAssociativeContainer.shtml">Hashed Associative Container</A>, 
<A href="SimpleAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/SimpleAssociativeContainer.shtml">Simple Associative Container</A>,
<A href="MultipleHashedAssociativeContainer.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/MultipleHashedAssociativeContainer.shtml">Multiple Hashed Associative Container</A>, 
<tt><A href="set.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/set.shtml">set</A></tt>, 
<tt><A href="Map.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Map.shtml">map</A></tt>,
<tt><A href="multiset.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/multiset.shtml">multiset</A></tt>,
<tt><A href="Multimap.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Multimap.shtml">multimap</A></tt>,
<tt><A href="hash_set.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_set.shtml">hash_set</A></tt>,
<tt><A href="hash_map.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_map.shtml">hash_map</A></tt>, 
<tt><A href="hash_multimap.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/hash_multimap.shtml">hash_multimap</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>