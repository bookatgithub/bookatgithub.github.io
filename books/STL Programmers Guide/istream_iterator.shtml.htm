<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>istream_iterator¡´T, Distance¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>istream_iterator&lt;T, Distance&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "iterators.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/iterators.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: iterators</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
An <tt>istream_iterator</tt> is an <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A> that performs formatted
input of objects of type <tt>T</tt> from a particular <tt>istream</tt>.  When end of
stream is reached, the <tt>istream_iterator</tt> takes on a special <i>end of
stream</i> value, which is a past-the-end iterator.  Note that all of the
restrictions of an <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A> must be obeyed, including the
restrictions on the ordering of <tt>operator*</tt> and <tt>operator++</tt>
operations.
<h3>Example</h3>
Fill a <tt><A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A></tt> with values read from standard input.
<pre>
<A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>&lt;int&gt; V;
<A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(istream_iterator&lt;int&gt;(cin), istream_iterator&lt;int&gt;(),
     <A href="back_insert_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/back_insert_iterator.shtml">back_inserter</A>(V));   
</pre>
<h3>Definition</h3>
Defined in <A href="iterator.h" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator.h">iterator.h</A>.
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>T</tt>
</TD>
<TD VAlign=top>
The <tt>istream_iterator</tt>'s value type.  <tt>Operator*</tt> returns a <tt>const T&amp;</tt>.
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>Distance</tt>
</TD>
<TD VAlign=top>
The <tt>istream_iterator</tt>'s distance type.
</TD>
<TD VAlign=top>
<tt>ptrdiff_t</tt>
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>
<h3>Type requirements</h3>
The value type <tt>T</tt> must be a type such that <tt>cin &gt;&gt; T</tt> is a 
valid expression.  
<P>
The value type <tt>T</tt> must be a model of <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">Default Constructible</A>.
<P>
The distance type must, as described in the
<A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A> requirements, be a signed integral type.
<h3>Public base classes</h3>
None.
<h3>Members</h3>
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator()</tt>
</TD>
<TD VAlign=top>
<tt>istream_iterator</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator(istream&amp;)</tt>
</TD>
<TD VAlign=top>
<tt>istream_iterator</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator(const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="trivial.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/trivial.shtml">Trivial Iterator</A>
</TD>
<TD VAlign=top>
The copy constructor
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator&amp; operator=(const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="trivial.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/trivial.shtml">Trivial Iterator</A>
</TD>
<TD VAlign=top>
The assignment operator
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>const T&amp; operator*() const</tt>
</TD>
<TD VAlign=top>
 <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>
</TD>
<TD VAlign=top>
Returns the next object in the stream.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator&amp; operator++()</tt>
</TD>
<TD VAlign=top>
 <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>
</TD>
<TD VAlign=top>
Preincrement.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator&amp; operator++(int)</tt>
</TD>
<TD VAlign=top>
 <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>
</TD>
<TD VAlign=top>
Postincrement.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool operator==(const istream_iterator&amp;, const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="trivial.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/trivial.shtml">Trivial iterator</A>
</TD>
<TD VAlign=top>
The equality operator.  This is a global function, not a member function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>input_iterator_tag iterator_category(const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="iterator_tags.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_tags.shtml">iterator tags</A>
</TD>
<TD VAlign=top>
Returns the iterator's category.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>T* value_type(const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="iterator_tags.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_tags.shtml">iterator tags</A>
</TD>
<TD VAlign=top>
Returns the iterator's value type.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>Distance* distance_type(const istream_iterator&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="iterator_tags.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/iterator_tags.shtml">iterator tags</A>
</TD>
<TD VAlign=top>
Returns the iterator's distance type.
&lt;
</TD>
</tr>
</table>
<h3>New members</h3>
These members are not defined 
in the <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A> requirements,
but are specific to <tt>istream_iterator</tt>.
<Table border>
<TR>
<TH>
Function
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator()</tt>
</TD>
<TD VAlign=top>
The default constructor:  Constructs an end-of-stream iterator.
   This is a past-the-end iterator, and it is useful when constructing
   a &quot;range&quot;.  
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>istream_iterator(istream&amp; s)</tt>
</TD>
<TD VAlign=top>
Creates an <tt>istream_iterator</tt> that reads values from the input
   stream <tt>s</tt>.  When <tt>s</tt> reaches end of stream, this iterator will
   compare equal to an end-of-stream iterator created using the
   default constructor.
</TD>
</tr>
</table>
<h3>Notes</h3>
<h3>See also</h3>
<A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>, <A href="InputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/InputIterator.shtml">Input Iterator</A>, <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">Output Iterator</A>.

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>