<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>less_equal¡´T¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>less_equal&lt;T&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "functors.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: functors</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
<tt>Less_equal&lt;T&gt;</tt> is a <A href="functors.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.shtml">function object</A>.  Specifically, it is an 
<A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>, which means it is a function 
object that tests the truth or falsehood of some condition.
If <tt>f</tt> is an object of class
<tt>less_equal&lt;T&gt;</tt> and <tt>x</tt> and <tt>y</tt> are objects of class <tt>T</tt>, then
<tt>f(x,y)</tt> returns <tt>true</tt> if <tt>x &lt;= y</tt> and <tt>false</tt> otherwise. 
<h3>Example</h3>
Finds the first non-positive element in a list.
<pre>
<A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A>&lt;int&gt; L;
...
<A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A>&lt;int&gt;::iterator first_nonpositive = 
       <A href="find_if.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/find_if.shtml">find_if</A>(L.begin(), L.end(), <A href="binder2nd.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/binder2nd.shtml">bind2nd</A>(less_equal&lt;int&gt;(), 0));
assert(first_nonpositive == L.end() || *first_nonpositive &lt;= 0);
</pre>
<h3>Definition</h3>
Defined in <A href="javascript:if(confirm('http://codeguru.developer.com/cpp/stlguide/function.h  \n\nThis file was not retrieved by Teleport Pro, because the server reports that an error occurred that prevented retrieval.  \n\nDo you want to open it from the server?'))window.location='http://codeguru.developer.com/cpp/stlguide/function.h'" tppabs="http://codeguru.developer.com/cpp/stlguide/function.h">function.h</A>.
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>T</tt>
</TD>
<TD VAlign=top>
The type of <tt>less_equal</tt>'s arguments.
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>, <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">DefaultConstructible</A>
<h3>Type requirements</h3>
<tt>T</tt> is <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThan Comparable</A>.
<h3>Public base classes</h3>
<tt><A href="binary_function.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/binary_function.shtml">binary_function</A>&lt;T, T, bool&gt;</tt>.
<h3>Members</h3>
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>first_argument_type</tt>
</TD>
<TD VAlign=top>
 <A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>
</TD>
<TD VAlign=top>
The type of the first argument: <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>second_argument_type</tt>
</TD>
<TD VAlign=top>
 <A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>
</TD>
<TD VAlign=top>
The type of the second argument: <tt>T</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>result_type</tt>
</TD>
<TD VAlign=top>
 <A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>
</TD>
<TD VAlign=top>
The type of the result: <tt>bool</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>less_equal()</tt>
</TD>
<TD VAlign=top>
 <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">DefaultConstructible</A>
</TD>
<TD VAlign=top>
The default constructor.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool operator()(const T&amp; x, const T&amp; y)</tt>
</TD>
<TD VAlign=top>
 <A href="BinaryFunction.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryFunction.shtml">Binary Function</A>
</TD>
<TD VAlign=top>
Function call operator.  The return value is <tt>x &lt;= y</tt>.
</TD>
</tr>
</table>
<h3>New members</h3>
All of <tt>less_equal</tt>'s members are defined in the 
<A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A> and  <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">DefaultConstructible</A>
requirements.
<tt>Less_equal</tt> does not introduce any new members.
<h3>Notes</h3>
<h3>See also</h3>
The <A href="functors.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.shtml">function object overview</A>,  
<A href="AdaptableBinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/AdaptableBinaryPredicate.shtml">Adaptable Binary Predicate</A>, 
<tt><A href="equal_to.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/equal_to.shtml">equal_to</A></tt>,
<tt><A href="not_equal_to.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/not_equal_to.shtml">not_equal_to</A></tt>,
<tt><A href="greater.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/greater.shtml">greater</A></tt>,
<tt><A href="less.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/less.shtml">less</A></tt>,
<tt><A href="greater_equal.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/greater_equal.shtml">greater_equal</A></tt>,

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>