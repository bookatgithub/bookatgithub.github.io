<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>max_element</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>max_element</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "algorithms.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/algorithms.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "function.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/function.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: algorithms</TD>
<TD Align=right VAlign=top><b>Component type</b>: function</TD>
</TR>
</Table>

<h3>Prototype</h3>
<tt>Max_element</tt> is an overloaded name; there are actually two 
<tt>max_element</tt> functions.    
<pre>
template &lt;class <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">ForwardIterator</A>&gt;
ForwardIterator max_element(ForwardIterator first, ForwardIterator last);

template &lt;class <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">ForwardIterator</A>, class <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">BinaryPredicate</A>&gt;
ForwardIterator max_element(ForwardIterator first, ForwardIterator last,
                            <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">BinaryPredicate</A> comp);
</pre>                   
<h3>Description</h3>
<tt>Max_element</tt> finds the largest element in the range <tt>[first, last)</tt>.
It returns the first iterator <tt>i</tt> in <tt>[first, last)</tt> such that no
other iterator in <tt>[first, last)</tt> points to a value greater than <tt>*i</tt>.
The return value is <tt>last</tt> if and only if <tt>[first, last)</tt> is an empty
range.
<P>
The two versions of <tt>max_element</tt> differ in how they define whether one
element is less than another.  The first version compares
objects using <tt>operator&lt;</tt>, and the second compares objects using
a <A href="functors.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/functors.shtml">function object</A> <tt>comp</tt>.  
<P>
The first version of <tt>max_element</tt> returns 
the first iterator <tt>i</tt> in <tt>[first, last)</tt> such that, for every
iterator <tt>j</tt> in <tt>[first, last)</tt>, <tt>*i &lt; *j</tt> is <tt>false</tt>.
The second version returns 
the first iterator <tt>i</tt> in <tt>[first, last)</tt> such that, for every
iterator <tt>j</tt> in <tt>[first, last)</tt>, <tt>comp(*i, *j)</tt> is <tt>false</tt>.
<h3>Definition</h3>
Defined in <A href="algo.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algo.h">algo.h</A>.
<h3>Requirements on types</h3>
For the first version:
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>ForwardIterator</tt>'s value type is <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThan Comparable</A>.
</UL>
For the second version:
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>BinaryPredicate</tt> is a model of <A href="BinaryPredicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/BinaryPredicate.shtml">Binary Predicate</A>.
<LI>
<tt>ForwardIterator</tt>'s value type is convertible to <tt>BinaryPredicate</tt>'s
   first argument type and second argument type.
</UL>
<h3>Preconditions</h3>
<UL>
<LI>
<tt>[first, last)</tt> is a valid range.
</UL>
<h3>Complexity</h3>
Linear.  Zero comparisons if <tt>[first, last)</tt> is an empty range,
otherwise exactly <tt>(last - first) - 1</tt> comparisons.
<h3>Example</h3>
<pre>
int main()
{
  <A href="List.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/List.shtml">list</A>&lt;int&gt; L;
  <A href="generate_n.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/generate_n.shtml">generate_n</A>(<A href="front_insert_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/front_insert_iterator.shtml">front_inserter</A>(L), 1000, rand);
  
  list&lt;int&gt;::const_iterator it = max_element(L.begin(), L.end());
  cout &lt;&lt; &quot;The largest element is &quot; &lt;&lt; *it &lt;&lt; endl;
}
</pre>
<h3>Notes</h3>
<h3>See also</h3>
<tt><A href="min.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/min.shtml">min</A></tt>, <tt><A href="max.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/max.shtml">max</A></tt>, <tt><A href="min_element.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/min_element.shtml">min_element</A></tt>, <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThan Comparable</A>,
<tt><A href="sort.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/sort.shtml">sort</A></tt>, <tt><A href="nth_element.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/nth_element.shtml">nth_element</A></tt>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>