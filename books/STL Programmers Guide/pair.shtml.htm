<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>pair¡´T1, T2¡µ</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>pair&lt;T1, T2&gt;</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "utilities.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/utilities.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "type.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/type.gif" Alt=""   WIDTH = "194"  HEIGHT = "39" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: utilities</TD>
<TD Align=right VAlign=top><b>Component type</b>: type</TD>
</TR>
</Table>

<h3>Description</h3>
<tt>Pair&lt;T1,T2&gt;</tt> is a heterogeneous pair: it holds one object of type 
<tt>T1</tt> and one of type <tt>T2</tt>.  A pair is much like a <A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>,
in that it &quot;owns&quot; its elements.  It is not actually a model of
<A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>, though, because it does not support the standard
methods (such as <A href="Iterators.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Iterators.shtml">iterators</A>) for accessing the elements of a
<A href="Container.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Container.shtml">Container</A>.
<P>
Functions that need to return two values often return a <tt>pair</tt>.
<h3>Example</h3>
<pre>
pair&lt;bool, double&gt; result = do_a_calculation();
if (result.first)
  do_something_more(result.second);
else
  report_error();
</pre>
<h3>Definition</h3>
Defined in <A href="pair.h" tppabs="http://codeguru.developer.com/cpp/stlguide/pair.h">pair.h</A>
<h3>Template parameters</h3>
<Table border>
<TR>
<TH>
Parameter
</TH>
<TH>
Description
</TH>
<TH>
Default
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>T1</tt>
</TD>
<TD VAlign=top>
The type of the first element stored in the <tt>pair</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>T2</tt>
</TD>
<TD VAlign=top>
The type of the second element stored in the <tt>pair</tt>
</TD>
<TD VAlign=top>
&nbsp;
</TD>
</tr>
</table>
<h3>Model of</h3>
<A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>
<h3>Type requirements</h3>
<tt>T1</tt> and <tt>T2</tt> must both be models of <A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>.  Additional operations
have additional requirements.  <tt>Pair</tt>'s default constructor may only
be used if both <tt>T1</tt> and <tt>T2</tt> are <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">DefaultConstructible</A>, 
<tt>operator==</tt> may only be used if both <tt>T1</tt> and <tt>T2</tt> are
<A href="EqualityComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/EqualityComparable.shtml">EqualityComparable</A>, and <tt>operator&lt;</tt> may only be used if both
<tt>T1</tt> and <tt>T2</tt> are <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThanComparable</A>.
<h3>Public base classes</h3>
None.
<h3>Members</h3>
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Where defined
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>first_type</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>second_type</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair()</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
The default constructor.  See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair(const first_type&amp;, const second_type&amp;)</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
The pair constructor.  See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair(const pair&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>
</TD>
<TD VAlign=top>
The copy constructor
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair&amp; operator=(const pair&amp;)</tt>
</TD>
<TD VAlign=top>
 <A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>
</TD>
<TD VAlign=top>
The assignment operator
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>first</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>second</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool operator==(const pair&amp;, const pair&amp;)</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>bool operator&lt;(const pair&amp;, const pair&amp;)</tt>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class T1, class T2&gt;
pair&lt;T1, T2&gt; make_pair(const T1&amp;, const T2&amp;)
</pre>
</TD>
<TD VAlign=top>
<tt>pair</tt>
</TD>
<TD VAlign=top>
See below.
</TD>
</tr>
</table>
<h3>New members</h3>
These members are not defined 
in the <A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A> requirements,
but are specific to <tt>pair</tt>.
<Table border>
<TR>
<TH>
Member
</TH>
<TH>
Description
</TH>
</TR>
<TR>
<TD VAlign=top>
<tt>first_type</tt>
</TD>
<TD VAlign=top>
The type of the pair's first component.  This is a <tt>typedef</tt> for
   the template parameter <tt>T1</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>second_type</tt>
</TD>
<TD VAlign=top>
The type of the pair's second component.  This is a <tt>typedef</tt> for
   the template parameter <tt>T2</tt>
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair()</tt>
</TD>
<TD VAlign=top>
The default constructor.  It uses constructs objects of types
   <tt>T1</tt> and <tt>T2</tt> using their default constructors.  This constructor
   may only be used if both <tt>T1</tt> and <tt>T2</tt> are <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">DefaultConstructible</A>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>pair(const first_type&amp; x, const second_type&amp; y)</tt>
</TD>
<TD VAlign=top>
The pair constructor.  Constructs a pair such that <tt>first</tt> is constructed
   from <tt>x</tt> and <tt>second</tt> is constructed from <tt>y</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>first</tt>
</TD>
<TD VAlign=top>
Public member variable of type <tt>first_type</tt>: the first object stored in the <tt>pair</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<tt>second</tt>
</TD>
<TD VAlign=top>
Public member variable of type <tt>second_type</tt>: The second object stored in the <tt>pair</tt>.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class T1, class T2&gt;
bool operator==(const pair&lt;T1,T2&gt;&amp; x, 
                const pair&lt;T1,T2&gt;&amp; y);
</pre>
</TD>
<TD VAlign=top>
The equality operator.  The return value is <tt>true</tt> if and only 
the first elements of <tt>x</tt> and <tt>y</tt> are equal, and the second
elements of <tt>x</tt> and <tt>y</tt> are equal.  This operator may only
be used if both <tt>T1</tt> and <tt>T2</tt> are <A href="EqualityComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/EqualityComparable.shtml">EqualityComparable</A>.
This is a global function, not a member function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class T1, class T2&gt;
bool operator&lt;(const pair&lt;T1,T2&gt;&amp; x, 
               const pair&lt;T1,T2&gt;&amp; y);
</pre>
</TD>
<TD VAlign=top>
The comparison operator.  It uses lexicographic comparison:
the return value is <tt>true</tt> if the
first element of <tt>x</tt> is less than the first element of <tt>y</tt>,
and <tt>false</tt> if the first element of <tt>y</tt> is less than the first
element of <tt>x</tt>.  If neither of these is the case, then
<tt>operator&lt;</tt> returns the result of comparing the second elements
of <tt>x</tt> and <tt>y</tt>.  This operator may only
be used if both <tt>T1</tt> and <tt>T2</tt> are <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThanComparable</A>.
This is a global function, not a member function.
</TD>
</TR>
<TR>
<TD VAlign=top>
<pre>
template &lt;class T1, class T2&gt;
pair&lt;T1, T2&gt; make_pair(const T1&amp; x, const T2&amp; x)
</pre>
</TD>
<TD VAlign=top>
Equivalent to <tt>pair&lt;T1, T2&gt;(x, y)</tt>.
This is a global function, not a member function.
It exists only for the sake of convenience.
</TD>
</tr>
</table>
<h3>Notes</h3>
<h3>See also</h3>
<A href="Assignable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Assignable.shtml">Assignable</A>, <A href="DefaultConstructible.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/DefaultConstructible.shtml">Default Constructible</A>, <A href="LessThanComparable.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/LessThanComparable.shtml">LessThan Comparable</A>

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>