<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>remove_if</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>remove_if</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "algorithms.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/algorithms.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "function.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/function.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: algorithms</TD>
<TD Align=right VAlign=top><b>Component type</b>: function</TD>
</TR>
</Table>

<h3>Prototype</h3>
<pre>
template &lt;class <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">ForwardIterator</A>, class <A href="Predicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Predicate.shtml">Predicate</A>&gt;
ForwardIterator remove_if(ForwardIterator first, ForwardIterator last,
                          Predicate pred);
</pre>                   
<h3>Description</h3>
<tt>Remove_if</tt> removes from the range <tt>[first, last)</tt> every element <tt>x</tt> such
that <tt>pred(x)</tt> is <tt>true</tt>.  That is, <tt>remove_if</tt>
returns an iterator <tt>new_last</tt> such that the range <tt>[first, new_last)</tt>
contains no elements for which <tt>pred</tt> is <tt>true</tt>. <A href="#1">[1]</A> The iterators in
the range <tt>[new_last, last)</tt> are all still dereferenceable, but the
elements that they point to are unspecified.  <tt>Remove_if</tt> is stable,
meaning that the relative order of elements that are not removed is
unchanged.
<h3>Definition</h3>
Defined in <A href="algo.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algo.h">algo.h</A>.
<h3>Requirements on types</h3>
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>ForwardIterator</tt> is mutable.
<LI>
<tt>Predicate</tt> is a model of <A href="Predicate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Predicate.shtml">Predicate</A>.
<LI>
<tt>ForwardIterator</tt>'s value type is convertible to <tt>Predicate</tt>'s
   argument type.
</UL>
<h3>Preconditions</h3>
<UL>
<LI>
<tt>[first, last)</tt> is a valid range.
</UL>
<h3>Complexity</h3>
Linear.  <tt>Remove_if</tt> performs exactly <tt>last - first</tt> applications
of <tt>pred</tt>.
<h3>Example</h3>
Remove all even numbers from a vector.
<pre>
<A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>&lt;int&gt; V;
V.push_back(1);
V.push_back(4);
V.push_back(2);
V.push_back(8);
V.push_back(5);
V.push_back(7);

<A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(V.begin(), V.end(), <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
    // The output is &quot;1 4 2 8 5 7&quot;

<A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>&lt;int&gt;::iterator new_end = 
        remove_if(V.begin(), V.end(), 
                  <A href="unary_compose.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/unary_compose.shtml">compose1</A>(<A href="binder2nd.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/binder2nd.shtml">bind2nd</A>(<A href="equal_to.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/equal_to.shtml">equal_to</A>&lt;int&gt;(), 0),
                           <A href="binder2nd.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/binder2nd.shtml">bind2nd</A>(<A href="modulus.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/modulus.shtml">modulus</A>&lt;int&gt;(), 2)));
V.erase(new_end, V.end()); <A href="#1">[1]</A>

<A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A>(V.begin(), V.end(), <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;int&gt;(cout, &quot; &quot;));
    // The output is &quot;1 5 7&quot;.
</pre>
<h3>Notes</h3>
<P><A name="1">[1]</A>
The meaning of &quot;removal&quot; is somewhat subtle.  <tt>Remove_if</tt>
does not destroy any iterators, and does not change the distance
between <tt>first</tt> and <tt>last</tt>.  (There's no way that it could do anything
of the sort.)  So, for example, if <tt>V</tt> is a <A href="Vector.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Vector.shtml">vector</A>,
<tt>remove_if(V.begin(), V.end(), pred)</tt> does not change <tt>V.size()</tt>: <tt>V</tt> will
contain just as many elements as it did before.  <tt>Remove_if</tt> returns an
iterator that points to the end of the resulting range after elements
have been removed from it; it follows that the elements after that
iterator are of no interest, and may be discarded.  If you are
removing elements from a <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>, you may simply erase them.
That is, a reasonable way of removing elements from a <A href="Sequence.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/Sequence.shtml">Sequence</A>
is <tt>S.erase(remove_if(S.begin(), S.end(), pred), S.end())</tt>.
<h3>See also</h3>
<tt><A href="remove.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/remove.shtml">remove</A></tt>, <tt><A href="remove_copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/remove_copy.shtml">remove_copy</A></tt>, <tt><A href="remove_copy_if.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/remove_copy_if.shtml">remove_copy_if</A></tt>,
<tt><A href="unique.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/unique.shtml">unique</A></tt>, <tt><A href="unique_copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/unique_copy.shtml">unique_copy</A></tt>.

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>