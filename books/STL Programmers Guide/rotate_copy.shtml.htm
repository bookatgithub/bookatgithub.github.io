<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Zafir Anjum">
   <TITLE>rotate_copy</TITLE>
    <META name="description" 
     content="A freely available implementation 
     of the C++ Standard Template Library, including 
     hypertext documentation.">
	<META name="keywords" 
	content="generic programming, STL, standard template library">
</HEAD>

<SCRIPT LANGUAGE="JavaScript"><!--
var adcategory = "cpp";
// -->
</SCRIPT>


<TITLE>CodeGuru - Visual C++</TITLE>

<META NAME="Author" CONTENT="developer.com">


<META NAME="Keywords" CONTENT="visual c++ java vb source code software downloads freeware shareware visual basic c++ web development general internet internet security news articles directory reference sample example guide tutorial help resource developer discussion earthweb developer.com">

<META NAME="description" CONTENT="Developer.com offers dedicated downloads for the IT professional developer. Features include visual c++, java, visual basic, vb, source code and more.">
<META NAME="distribution" CONTENT="global">
<META NAME="resource-type" CONTENT="document">
<META NAME="language" CONTENT="en">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#DD0000" VLINK="#999999" ALINK="#FF0000"><!-- begin main content column -->







































<BR Clear>
<H1>rotate_copy</H1>

<Table CellPadding=0 CellSpacing=0 width=100%>
<TR>
<TD Align=left><Img src = "algorithms.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/algorithms.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
<TD Align=right><Img src = "function.gif" tppabs="http://codeguru.developer.com/cpp/stlguide/function.gif" Alt=""   WIDTH = "194"  HEIGHT = "38" ></TD>
</TR>
<TR>
<TD Align=left VAlign=top><b>Category</b>: algorithms</TD>
<TD Align=right VAlign=top><b>Component type</b>: function</TD>
</TR>
</Table>

<h3>Prototype</h3>
<pre>
template &lt;class <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">ForwardIterator</A>, class <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">OutputIterator</A>&gt;
OutputIterator rotate_copy(ForwardIterator first, ForwardIterator middle,
                           ForwardIterator last, OutputIterator result);
</pre>                   
<h3>Description</h3>
<tt>Rotate_copy</tt> copies elements from the range <tt>[first, last)</tt> to the
range <tt>[result, result + (last - first))</tt> such that <tt>*middle</tt> is
copied to <tt>*result</tt>, <tt>*(middle + 1)</tt> is copied to <tt>*(result + 1)</tt>, and
so on.  Formally, for every integer <tt>n</tt> such that <tt>0 &lt;= n &lt; last -
first</tt>, <tt>rotate_copy</tt> performs the assignment <tt>*(result + (n + (last -
middle)) % (last - first)) = *(first + n)</tt>.  <tt>Rotate_copy</tt> is similar
to <tt><A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A></tt> followed by <tt><A href="rotate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/rotate.shtml">rotate</A></tt>, but is more efficient.  The
return value is <tt>result + (last - first)</tt>.
<h3>Definition</h3>
Defined in <A href="algo.h" tppabs="http://codeguru.developer.com/cpp/stlguide/algo.h">algo.h</A>.
<h3>Requirements on types</h3>
<UL>
<LI>
<tt>ForwardIterator</tt> is a model of <A href="ForwardIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ForwardIterator.shtml">Forward Iterator</A>.
<LI>
<tt>OutputIterator</tt> is a model of <A href="OutputIterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/OutputIterator.shtml">Output Iterator</A>.
<LI>
<tt>ForwardIterator</tt>'s value type is convertible to a type in
   <tt>OutputIterator</tt>'s set of value types.
</UL>
<h3>Preconditions</h3>
<UL>
<LI>
<tt>[first, middle)</tt> is a valid range.
<LI>
<tt>[middle, last)</tt> is a valid range. <A href="#1">[1]</A>
<LI>
There is enough space to hold all of the elements being copied.
   More formally, the requirement is that 
   <tt>[result, result + (last - first))</tt> is a valid range. 
<LI>
The ranges <tt>[first, last)</tt> and <tt>[result, result + (last - first))</tt>
   do not overlap.
</UL>
<h3>Complexity</h3>
Linear.  <tt>Rotate_copy</tt> performs exactly <tt>last - first</tt> assignments.
<h3>Example</h3>
<pre>
const char alpha[] = &quot;abcdefghijklmnopqrstuvwxyz&quot;;
rotate_copy(alpha, alpha + 13, alpha + 26, <A href="ostream_iterator.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/ostream_iterator.shtml">ostream_iterator</A>&lt;char&gt;(cout));
// The output is nopqrstuvwxyzabcdefghijklm
</pre>
<h3>Notes</h3>
<P><A name="1">[1]</A>
It follows from these two requirements that <tt>[first, last)</tt> is
a valid range.
<h3>See also</h3>
<tt><A href="rotate.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/rotate.shtml">rotate</A></tt>, <tt><A href="copy.shtml.htm" tppabs="http://codeguru.developer.com/cpp/stlguide/copy.shtml">copy</A></tt>.

<HR SIZE="6"> <FONT SIZE="-2"> Copyright &copy; 1996 Silicon Graphics, Inc.


</td>

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

</BODY>
</HTML>